[
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "规定级联删除时的操作，详见级联删除。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "CASCADE"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": " 级联删除"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "RESTRICT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": " 限制删除，如果有关联数据，不允许删除"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "SET_NULL"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": " 设置为"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "null"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "NO_ACTION"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "默认"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "，不做任何操作"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "SET_DEFAULT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": " 设置为默认值，默认值需要在字段定义时指定"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "defaultValue"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Cascade Delete Action"
    ],
    "pageType": "guide",
    "title": "Cascade Delete Action",
    "section": "Cascade Delete Action",
    "route": "/en/class-definition/cascade-delete-action",
    "fragment": "cascade-delete-action",
    "content": "属性"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "常见Kotlin类型与Kronos列类型的映射关系如下： 在未使用ColumnType注解的情况下，Kronos会根据Kotlin类型自动推测数据库列类型，您可以参考以下表格查看Kotlin数据类型与Kronos列类型(KColumnType)的映射关系。 Kronos列类型在不同数据库中的表现有所不同，具体请参考Kronos列类型。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "Kotlin类型 Kronos列类型"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlin.Boolean"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "TINYINT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlin.Byte"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "TINYINT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlin.Short"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "SMALLINT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlin.Int"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "INT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlin.Long"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "BIGINT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlin.Float"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "FLOAT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlin.Double"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "DOUBLE"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "java.math.BigDecimal"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "NUMERIC"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlin.Char"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "CHAR"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlin.String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "VARCHAR"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlinx.datetime.LocalDate"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": ", "
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "java.util.Date"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": ", "
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "java.sql.Date"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": ", "
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "java.time.LocalDate"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "DATE"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlinx.datetime.LocalTime"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": ", "
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "java.time.LocalTime"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "TIME"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlinx.datetime.LocalDateTime"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": ", "
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "java.time.LocalDateTime"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "DATETIME"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "kotlin.ByteArray"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "BINARY"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "else"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Kotlin Type to KColumnType"
    ],
    "pageType": "guide",
    "title": "Kotlin Type to KColumnType",
    "section": "Kotlin Type to KColumnType",
    "route": "/en/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin-type-to-kcolumntype",
    "content": "VARCHAR"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "各数据库类型与常用类型对应关系一览表："
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "BIT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store 0/1 KotlinType: Boolean"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "TINYINT(1) NUMBER(1) BIT BOOLEAN INTEGER"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "TINYINT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store -128~127 KotlinType: Byte"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "TINYINT NUMBER(3) TINYINT SMALLINT INTEGER"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "SMALLINT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store -32768~32767 KotlinType: Short"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "SMALLINT NUMBER(5) SMALLINT SMALLINT INTEGER"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "MEDIUMINT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store -8388608~8388607 KotlinType: Int"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "MEDIUMINT NUMBER(7) INT INTEGER INTEGER"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "INT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store -2147483648~2147483647 KotlinType: Int"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "INT NUMBER(10) INT INTEGER INTEGER"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "BIGINT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store -9223372036854775808~9223372036854775807 KotlinType: Long"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "BIGINT NUMBER(19) BIGINT BIGINT INTEGER"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "FLOAT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store -3.4028235E+38~3.4028235E+38 KotlinType: Float"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "FLOAT FLOAT FLOAT REAL REAL"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "DOUBLE"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store -1.7976931348623157E+308~1.7976931348623157E+308 KotlinType: Double"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "DOUBLE DOUBLE FLOAT DOUBLE REAL"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "DECIMAL"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store -10^38+1~10^38-1 KotlinType: BigDecimal"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "DECIMAL NUMBER DECIMAL DECIMAL NUMERIC"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "SERIAL"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store serial KotlinType: Int"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "INT NUMBER INT SERIAL INTEGER"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "NUMERIC"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store -10^38+1~10^38-1 KotlinType: BigDecimal"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "NUMERIC NUMBER DECIMAL DECIMAL NUMERIC"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "CHAR"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store fixed length string KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "CHAR CHAR CHAR CHAR TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "VARCHAR"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store variable length string KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "VARCHAR VARCHAR VARCHAR VARCHAR TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store text KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "TEXT CLOB TEXT TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "MEDIUMTEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store medium text KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "MEDIUMTEXT CLOB TEXT TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "LONGTEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store long text KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "TEXT CLOB TEXT TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "DATE"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store date KotlinType: LocalDate"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "DATE DATE DATE DATE TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "TIME"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store time KotlinType: LocalTime"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "TIME DATE TIME TIME TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "DATETIME"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store date and time KotlinType: LocalDateTime"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "DATETIME DATE DATETIME TIMESTAMP TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "TIMESTAMP"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store timestamp KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "TIMESTAMP DATE DATETIME TIMESTAMP TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Year"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store year KotlinType: Int"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "YEAR NUMBER INT INT INTEGER"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "BINARY"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store binary KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "BINARY BLOB BINARY BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "VARBINARY"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store variable length binary KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "VARBINARY BLOB VARBINARY BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "LONGVARBINARY"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store long binary KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "LONGBLOB BLOB IMAGE BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "BLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store blob KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "BLOB BLOB IMAGE BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "MEDIUMBLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store medium blob KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "MEDIUMBLOB BLOB IMAGE BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "LONGBLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store long blob KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "LONGBLOB BLOB IMAGE BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "CLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store clob KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "CLOB CLOB TEXT TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "JSON"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store json KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "JSON JSON JSON JSON TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "ENUM"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store enum KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "ENUM ENUM ENUM TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "NVARCHAR"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store nvarchar KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "NVARCHAR NVARCHAR NVARCHAR TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "NCHAR"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store nchar KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "NCHAR NCHAR NCHAR TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "NCLOB"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store nclob KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "NCLOB NCLOB NTEXT TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "UUID"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store uuid KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "CHAR CHAR CHAR UUID TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "SET"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store set KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "SET SET SET TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "GEOMETRY"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store geometry KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "GEOMETRY GEOMETRY GEOMETRY GEOMETRY TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "POINT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store point KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "POINT POINT POINT POINT TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "LINESTRING"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "store linestring KotlinType: String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "KColumnType"
    ],
    "pageType": "guide",
    "title": "KColumnType",
    "section": "KColumnType",
    "route": "/en/class-definition/kcolumn-type",
    "fragment": "kcolumntype",
    "content": "LINESTRING LINESTRING LINESTRING LINESTRING TEXT"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Naming Strategy"
    ],
    "pageType": "guide",
    "title": "Naming Strategy",
    "section": "Naming Strategy",
    "route": "/en/class-definition/naming-strategy",
    "fragment": "naming-strategy",
    "content": "KronosNamingStrategy是一个接口，用于定义表名和列名的转换策略。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Naming Strategy"
    ],
    "pageType": "guide",
    "title": "Naming Strategy",
    "section": "成员函数：",
    "route": "/en/class-definition/naming-strategy",
    "fragment": "成员函数",
    "content": "fun db2k(name: String): String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Naming Strategy"
    ],
    "pageType": "guide",
    "title": "Naming Strategy",
    "section": "成员函数：",
    "route": "/en/class-definition/naming-strategy",
    "fragment": "成员函数",
    "content": "将数据库表/列名转为kotlin类名/属性名。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Naming Strategy"
    ],
    "pageType": "guide",
    "title": "Naming Strategy",
    "section": "成员函数：",
    "route": "/en/class-definition/naming-strategy",
    "fragment": "成员函数",
    "content": "fun k2db(name: String): String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Naming Strategy"
    ],
    "pageType": "guide",
    "title": "Naming Strategy",
    "section": "成员函数：",
    "route": "/en/class-definition/naming-strategy",
    "fragment": "成员函数",
    "content": "将kotlin类名/属性名转为数据库表/列名。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Serialize Resolver"
    ],
    "pageType": "guide",
    "title": "Serialize Resolver",
    "section": "Serialize Resolver",
    "route": "/en/class-definition/serialize-resolver",
    "fragment": "serialize-resolver",
    "content": "KronosSerializeResolver是Kronos定义的序列化解析器接口，用于字符串和Kotlin实体类之间的序列化和反序列化转换。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Serialize Resolver"
    ],
    "pageType": "guide",
    "title": "Serialize Resolver",
    "section": "deserialize",
    "route": "/en/class-definition/serialize-resolver",
    "fragment": "deserialize",
    "content": "fun "
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Serialize Resolver"
    ],
    "pageType": "guide",
    "title": "Serialize Resolver",
    "section": "deserialize",
    "route": "/en/class-definition/serialize-resolver",
    "fragment": "deserialize",
    "content": " deserialize(serializedStr: String, kClass: KClass<*>): T"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Serialize Resolver"
    ],
    "pageType": "guide",
    "title": "Serialize Resolver",
    "section": "deserialize",
    "route": "/en/class-definition/serialize-resolver",
    "fragment": "deserialize",
    "content": "用于将字符串反序列化为指定的类型T"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Serialize Resolver"
    ],
    "pageType": "guide",
    "title": "Serialize Resolver",
    "section": "deserializeObj",
    "route": "/en/class-definition/serialize-resolver",
    "fragment": "deserializeobj",
    "content": "fun deserializeObj(serializedStr: String, kClass: KClass<*>): Any 用于将字符串反序列化为指定的KClass"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Serialize Resolver"
    ],
    "pageType": "guide",
    "title": "Serialize Resolver",
    "section": "serialize",
    "route": "/en/class-definition/serialize-resolver",
    "fragment": "serialize",
    "content": "fun serialize(obj: Any): String 用于将Kotlin对象序列化为String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Common Strategy"
    ],
    "pageType": "guide",
    "title": "Common Strategy",
    "section": "Common Strategy",
    "route": "/en/class-definition/common-strategy",
    "fragment": "common-strategy",
    "content": "KronosCommonStrategy是更新时间/创建时间/逻辑删除配置策略的通用配置策略接口。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Common Strategy"
    ],
    "pageType": "guide",
    "title": "Common Strategy",
    "section": "参数：",
    "route": "/en/class-definition/common-strategy",
    "fragment": "参数",
    "content": "enable"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Common Strategy"
    ],
    "pageType": "guide",
    "title": "Common Strategy",
    "section": "参数：",
    "route": "/en/class-definition/common-strategy",
    "fragment": "参数",
    "content": "Boolean类型，表示是否启用该策略。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Common Strategy"
    ],
    "pageType": "guide",
    "title": "Common Strategy",
    "section": "参数：",
    "route": "/en/class-definition/common-strategy",
    "fragment": "参数",
    "content": "field"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Common Strategy"
    ],
    "pageType": "guide",
    "title": "Common Strategy",
    "section": "参数：",
    "route": "/en/class-definition/common-strategy",
    "fragment": "参数",
    "content": "Field类型，表示对应的字段名。 其中需要指定的字段名属性包括name和columnName。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Class Definition and Configuration",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-class-definition-and-configuration",
    "content": "Declaring a data class as a table class in Kronos is very simple. You just need to make the class inherit from KPojo. Here is a simple example: For more complex data classes and when working with database table operations, here are examples of table creation statements in different databases: We define the properties of the data table through annotations and configuration options, such as primary keys, auto-increment, unique keys, and indexes."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Class Definition and Configuration",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-class-definition-and-configuration",
    "content": "Why use annotations instead of Kotlin DSL? We read annotation information through a compiler plugin and store the information in the entity class definition, so that all table structure parsing occurs at compile time rather than runtime. While this approach sacrifices some flexibility, it helps avoid runtime performance overhead."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Global Table Naming Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "global-table-naming-strategy",
    "content": "Parameter Type Default Value"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Global Table Naming Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "global-table-naming-strategy",
    "content": "tableNamingStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Global Table Naming Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "global-table-naming-strategy",
    "content": "KronosNamingStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Global Table Naming Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "global-table-naming-strategy",
    "content": "NoneNamingStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Global Table Naming Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "global-table-naming-strategy",
    "content": "You can create a custom table naming strategy by implementing a class that extends KronosNamingStrategy (see: Naming Strategy), and then specify this implementation in the configuration file. We provide a default LineHumpNamingStrategy for table naming: This strategy converts Kotlin class names to lowercase strings separated by underscores, e.g., ADataClass -> a_data_class, and converts database table/column names to camel case, e.g., user_name -> userName."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Global Field Naming Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "global-field-naming-strategy",
    "content": "Parameter Type Default Value"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Global Field Naming Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "global-field-naming-strategy",
    "content": "fieldNamingStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Global Field Naming Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "global-field-naming-strategy",
    "content": "KronosNamingStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Global Field Naming Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "global-field-naming-strategy",
    "content": "NoneNamingStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Global Field Naming Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "global-field-naming-strategy",
    "content": "Similar to the table naming strategy, you can create a custom field naming strategy by implementing a class that extends KronosNamingStrategy, and then specify this implementation in the configuration file. We also provide the LineHumpNamingStrategy as the default field naming strategy."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Create Time Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "create-time-strategy",
    "content": "Parameter Type Default Value"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Create Time Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "create-time-strategy",
    "content": "createTimeStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Create Time Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "create-time-strategy",
    "content": "KronosCommonStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Create Time Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "create-time-strategy",
    "content": "KronosCommonStrategy(false, \"create_time\", \"createTime\")"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Create Time Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "create-time-strategy",
    "content": "You can customize the create time strategy by creating a class that implements KronosCommonStrategy (see: Common Strategy), and then specify this implementation in the configuration file. The create time strategy is globally disabled by default and needs to be manually enabled. Even after setting the global create time strategy, you can still override it in a KPojo class using the @CreateTime annotation."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Update Time Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "update-time-strategy",
    "content": "Parameter Type Default Value"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Update Time Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "update-time-strategy",
    "content": "updateTimeStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Update Time Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "update-time-strategy",
    "content": "KronosCommonStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Update Time Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "update-time-strategy",
    "content": "KronosCommonStrategy(false, \"update_time\", \"updateTime\")"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Update Time Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "update-time-strategy",
    "content": "Similar to the create time strategy, you can customize the update time strategy by creating a class that implements KronosCommonStrategy, and then specify this implementation in the configuration file. The update time strategy is globally disabled by default and needs to be manually enabled. Even after setting the global update time strategy, you can still override it in a KPojo class using the @UpdateTime annotation."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Logic Delete Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "logic-delete-strategy",
    "content": "Parameter Type Default Value"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Logic Delete Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "logic-delete-strategy",
    "content": "logicDeleteStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Logic Delete Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "logic-delete-strategy",
    "content": "KronosCommonStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Logic Delete Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "logic-delete-strategy",
    "content": "KronosCommonStrategy(false, \"deleted\")"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Logic Delete Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "logic-delete-strategy",
    "content": "You can customize the logic delete strategy by creating a class that implements KronosCommonStrategy, and then specify this implementation in the configuration file. The logic delete strategy is globally disabled by default and needs to be manually enabled. Even after setting the global logic delete strategy, you can still override it in a KPojo class using the @LogicDelete annotation."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Optimistic Lock Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "optimistic-lock-strategy",
    "content": "Parameter Type Default Value"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Optimistic Lock Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "optimistic-lock-strategy",
    "content": "optimisticLockStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Optimistic Lock Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "optimistic-lock-strategy",
    "content": "KronosCommonStrategy"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Optimistic Lock Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "optimistic-lock-strategy",
    "content": "KronosCommonStrategy(false, \"version\")"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Optimistic Lock Strategy",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "optimistic-lock-strategy",
    "content": "You can customize the optimistic lock strategy by creating a class that implements KronosCommonStrategy, and then specify this implementation in the configuration file. You can also configure each entity object individually using Column Optimistic Lock. The optimistic lock strategy is globally disabled by default and needs to be manually enabled. Even after setting the global optimistic lock strategy, you can still override it in a KPojo class using the @Version annotation."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Default Date/Time Format",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "default-datetime-format",
    "content": "Parameter Type Default Value"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Default Date/Time Format",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "default-datetime-format",
    "content": "defaultDateFormat"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Default Date/Time Format",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "default-datetime-format",
    "content": "String"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Default Date/Time Format",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "default-datetime-format",
    "content": "yyyy-MM-dd HH:mm:ss"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Default Date/Time Format",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "default-datetime-format",
    "content": "Kronos uses the yyyy-MM-dd HH:mm:ss format by default for dates/times. You can modify the default format as follows:"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Default Timezone",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "default-timezone",
    "content": "Parameter Type Default Value"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Default Timezone",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "default-timezone",
    "content": "defaultTimeZone"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Default Timezone",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "default-timezone",
    "content": "kotlinx.datetime.TimeZone"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Default Timezone",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "default-timezone",
    "content": "currentSystemDefault()"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Default Timezone",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "default-timezone",
    "content": "Kronos uses the current system timezone by default. You can modify the default timezone as follows:"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Serialization Resolver",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "serialization-resolver",
    "content": "Parameter Type Default Value"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Serialization Resolver",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "serialization-resolver",
    "content": "serializeResolver"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Serialization Resolver",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "serialization-resolver",
    "content": "KronosSerializeResolver"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Serialization Resolver",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "serialization-resolver",
    "content": "NoneSerializeResolver"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Serialization Resolver",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "serialization-resolver",
    "content": "You can create a custom serialization resolver by implementing a class that extends KronosSerializeResolver, and then specify this implementation in the configuration file. For example, you can use the GSON library to implement a serialization resolver: In this example, we use the GSON library to implement a serialization resolver. You can use any library such as Kotlinx.serialization, Jackson, Moshi, FastJson, etc."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Name",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-name",
    "content": "@Table(name: String) Specifies the table name for a data table. If not specified, the default table naming strategy will be used. Parameters: name string: Table name"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Index",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-index",
    "content": "@TableIndex(name: String, columns: Array"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Index",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-index",
    "content": ", type: String, method: String)"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Index",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-index",
    "content": "Specifies an index for the data table. If not specified, no index will be created."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Index",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-index",
    "content": "Only effective when using tables.create"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Index",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-index",
    "content": "Parameters: name string: Index namecolumns Array"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Index",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-index",
    "content": ": Index column namestype String: Index type (optional)method String: Index method (optional)"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Creation Time",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-creation-time",
    "content": "@CreateTime(enabled: Boolean) Used to specify whether the data table enables the creation time strategy. If not specified, the global setting will be used. Parameters: enabled Boolean: Whether to enable"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Update Time",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-update-time",
    "content": "@UpdateTime(enabled: Boolean) Used to specify whether the data table enables the update time strategy. If not specified, the global setting will be used. Parameters: enabled Boolean: Whether to enable"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Table Logical Deletion",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "table-logical-deletion",
    "content": "@LogicDelete(enabled: Boolean) Used to specify whether the data table enables the logical deletion strategy. If not specified, the global setting will be used. Parameters: enabled Boolean: Whether to enable"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Name Setting",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-name-setting",
    "content": "@Column(name: String) Used to specify the column name of the data table. If not specified, the default column name strategy will be used. Parameters: name String: Column name"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Date Formatting",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-date-formatting",
    "content": "@DateTimeFormat(pattern: String) Used to specify the date/time format of the data table. If not specified, the default date/time format will be used. Parameters: pattern String: Date/time format"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Deserialization Setting",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-deserialization-setting",
    "content": "@ColumnDeserialize Used to declare whether the column needs to be deserialized. If not specified, deserialization will be disabled by default. If enabled, the Kronos.serializeResolver.deserialize method will be called to deserialize the value of the column into the specified type."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Association Setting",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-association-setting",
    "content": "@Reference(reference: String[], target: String[], onDelete: CascadeDeleteAction, defaultValue: String, mapperBy: String) This annotation is used to declare column associations, including association queries, association inserts, association updates, association deletions, etc. It supports one-to-one, one-to-many, many-to-one, and many-to-many associations. Kronos treats associated columns as custom properties and does not recognize them as database fields. The association feature in Kronos does not require defining foreign keys. Only defining the association relationship in the entity class is needed to achieve association queries, association inserts, association updates, association deletions, etc. Parameters: referenceFields Array"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Association Setting",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-association-setting",
    "content": ": Associated property namestargetFields Array"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Association Setting",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-association-setting",
    "content": ": Associated target table property namesonDelete CascadeDeleteAction: Associated deletion strategy (optional, default is no action)defaultValue Array"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Association Setting",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-association-setting",
    "content": ": Default values to be set when the cascade delete action is \"SET DEFAULT\" (optional)mapperBy Array"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Association Setting",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-association-setting",
    "content": ": Used to specify the maintenance end of this association relationship (empty means the maintenance end is the current entity; it cannot be empty when both ends have this annotation)usage Array"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Association Setting",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-association-setting",
    "content": ": Used to declare the association operations needed for this entity (optional, default is [Insert, Update, Delete, Upsert, Select])"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Primary Key Setting",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-primary-key-setting",
    "content": "@PrimaryKey(identity: Boolean) This annotation is used to declare a column as the primary key. Parameters: identity Boolean: Whether it is auto-incremented"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Type and Length",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-type-and-length",
    "content": "@ColumnType(type: String, length: Int) For different database types, Kronos will automatically convert the Kotlin types based on the Kotlin type's mapping to the database types. You can refer to Kotlin Type to KColumn Type for the mapping relationship between Kotlin data types and database types. You can use this annotation to declare the column type and length. If not specified, the default type and length will be used. Please refer to Kronos Column Types for all type information. Parameters: type String: Typelength Int: Length"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Not Null Constraint",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-not-null-constraint",
    "content": "@NotNull This annotation is used to declare a column as not null. If not specified, the default not null constraint will be used."
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Creation Time",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-creation-time",
    "content": "@CreateTime This annotation is used to declare a column as the creation time field. If not specified, the default creation time strategy will be used. Parameters: enabled Boolean: Whether it is enabled"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Update Time",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-update-time",
    "content": "@UpdateTime This annotation is used to declare a column as the update time field. If not specified, the default update time strategy will be used. Parameters: enabled Boolean: Whether it is enabled"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Logical Deletion",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-logical-deletion",
    "content": "@LogicDelete This annotation is used to declare a column as the logical deletion field. If not specified, the default logical deletion strategy will be used. Parameters: enabled Boolean: Whether it is enabled"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Table Class Definition and Configuration"
    ],
    "pageType": "guide",
    "title": "Table Class Definition and Configuration",
    "section": "Column Optimistic Lock",
    "route": "/en/class-definition/table-class-definition",
    "fragment": "column-optimistic-lock",
    "content": "@LogicDelete This annotation is used to declare a column as the optimistic lock field. If not specified, the default optimistic lock strategy will be used. Parameters: enabled Boolean: Whether it is enabled"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "BTREE",
    "route": "/en/class-definition/table-index",
    "fragment": "btree",
    "content": "Mysql.KIndexMethod.BTREE 二叉树索引，最常见的索引类型，无需指定，MySQL默认使用该索引。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "HASH",
    "route": "/en/class-definition/table-index",
    "fragment": "hash",
    "content": "Mysql.KIndexMethod.HASH 哈希索引，只有Memory引擎支持，不支持范围查询。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "NORMAL",
    "route": "/en/class-definition/table-index",
    "fragment": "normal",
    "content": "Mysql.KIndexType.NORMAL 普通索引，无需指定，MySQL默认使用该索引。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "UNIQUE",
    "route": "/en/class-definition/table-index",
    "fragment": "unique",
    "content": "Mysql.KIndexType.UNIQUE 唯一索引，用于保证数据唯一性。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "FULLTEXT",
    "route": "/en/class-definition/table-index",
    "fragment": "fulltext",
    "content": "Mysql.KIndexType.FULLTEXT 全文索引，只有MyISAM引擎支持，用于全文搜索。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "SPATIAL",
    "route": "/en/class-definition/table-index",
    "fragment": "spatial",
    "content": "Mysql.KIndexType.SPATIAL 空间索引，用于空间数据类型，支持范围查询。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "BTREE",
    "route": "/en/class-definition/table-index",
    "fragment": "btree-1",
    "content": "PostgreSQL.KIndexMethod.BTREE 二叉树索引，无需指定，PostgreSQL默认使用该索引。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "HASH",
    "route": "/en/class-definition/table-index",
    "fragment": "hash-1",
    "content": "PostgreSQL.KIndexMethod.HASH 哈希索引，用于等值查询，不支持范围查询。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "GIST",
    "route": "/en/class-definition/table-index",
    "fragment": "gist",
    "content": "PostgreSQL.KIndexMethod.GIST 通用索引，支持范围查询，支持空间索引。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "SPGIST",
    "route": "/en/class-definition/table-index",
    "fragment": "spgist",
    "content": "PostgreSQL.KIndexMethod.SPGIST 空间索引，支持范围查询。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "GIN",
    "route": "/en/class-definition/table-index",
    "fragment": "gin",
    "content": "PostgreSQL.KIndexMethod.GIN 通用倒排索引，用于全文搜索。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "BRIN",
    "route": "/en/class-definition/table-index",
    "fragment": "brin",
    "content": "PostgreSQL.KIndexMethod.BRIN 区间索引，用于大表。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "UNIQUE",
    "route": "/en/class-definition/table-index",
    "fragment": "unique-1",
    "content": "PostgreSQL.KIndexType.UNIQUE 唯一索引，用于保证数据唯一性。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "NORMAL",
    "route": "/en/class-definition/table-index",
    "fragment": "normal-1",
    "content": "Oracle.KIndexType.NORMAL 普通索引，无需指定，Oracle默认使用该索引。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "BITMAP",
    "route": "/en/class-definition/table-index",
    "fragment": "bitmap",
    "content": "Oracle.KIndexType.BITMAP 位图索引，用于高并发查询，适用于低基数列。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "UNIQUE",
    "route": "/en/class-definition/table-index",
    "fragment": "unique-2",
    "content": "Oracle.KIndexType.UNIQUE 唯一索引，用于保证数据唯一性。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "UNIQUE",
    "route": "/en/class-definition/table-index",
    "fragment": "unique-3",
    "content": "SqlServer.KIndexMethod.UNIQUE 唯一索引，用于保证数据唯一性。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "CLUSTERED",
    "route": "/en/class-definition/table-index",
    "fragment": "clustered",
    "content": "SqlServer.KIndexType.CLUSTERED 聚集索引，表中数据的物理顺序与索引的逻辑顺序一致。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "NONCLUSTERED",
    "route": "/en/class-definition/table-index",
    "fragment": "nonclustered",
    "content": "SqlServer.KIndexType.NONCLUSTERED 非聚集索引，表中数据的物理顺序与索引的逻辑顺序不一致。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "XML",
    "route": "/en/class-definition/table-index",
    "fragment": "xml",
    "content": "SqlServer.KIndexType.XML XML索引，用于XML数据类型。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "SPATIAL",
    "route": "/en/class-definition/table-index",
    "fragment": "spatial-1",
    "content": "SqlServer.KIndexType.SPATIAL 空间索引，用于空间数据类型。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "UNIQUE",
    "route": "/en/class-definition/table-index",
    "fragment": "unique-4",
    "content": "SQLite.KIndexMethod.UNIQUE 唯一索引，用于保证数据唯一性。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "NOCASE",
    "route": "/en/class-definition/table-index",
    "fragment": "nocase",
    "content": "SQLite.KIndexType.NOCASE 忽略大小写。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "RTRIM",
    "route": "/en/class-definition/table-index",
    "fragment": "rtrim",
    "content": "SQLite.KIndexType.RTRIM 忽略尾部空格。"
  },
  {
    "breadcrumbs": [
      "Data Class Definition",
      "Index Methods and Index Types"
    ],
    "pageType": "guide",
    "title": "Index Methods and Index Types",
    "section": "BINARY",
    "route": "/en/class-definition/table-index",
    "fragment": "binary",
    "content": "SQLite.KIndexType.BINARY 二进制比较。"
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Reference Insert"
    ],
    "pageType": "guide",
    "title": "Reference Insert",
    "section": "Reference Insert",
    "route": "/en/advanced/reference-insert",
    "fragment": "reference-insert",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Reference Delete"
    ],
    "pageType": "guide",
    "title": "Reference Delete",
    "section": "Reference Delete",
    "route": "/en/advanced/reference-delete",
    "fragment": "reference-delete",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Reference Select"
    ],
    "pageType": "guide",
    "title": "Reference Select",
    "section": "Reference Select",
    "route": "/en/advanced/reference-select",
    "fragment": "reference-select",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Reference Update"
    ],
    "pageType": "guide",
    "title": "Reference Update",
    "section": "Configuring Cascade Relationships",
    "route": "/en/advanced/reference-update",
    "fragment": "configuring-cascade-relationships",
    "content": "By configuring the column associations of KPojo with the [column association settings] directive and specifying the relationship information in @Reference with the usage property containing Update (or not specifying it, using the default), you can enable the cascading update feature for this class (or being) by specifying the associated fields."
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Reference Update"
    ],
    "pageType": "guide",
    "title": "Reference Update",
    "section": "Using the ",
    "route": "/en/advanced/reference-update",
    "fragment": "using-the-cascade-setting-for-current-cascade-operations",
    "content": "cascade"
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Reference Update"
    ],
    "pageType": "guide",
    "title": "Reference Update",
    "section": " Setting for Current Cascade Operations",
    "route": "/en/advanced/reference-update",
    "fragment": "using-the-cascade-setting-for-current-cascade-operations",
    "content": "In Kronos, we can use the cascade method to set whether to enable the cascade feature for the current update and limit the maximum cascade levels. KPojo.update().cascade().execute() enabled: Boolean Manually set whether to enable the cascade feature for the current update (optional, defaults to true for enabling cascade).depth: Int Limits the maximum cascade levels, defaulting to -1, which means no limit on cascade levels. 0 indicates no cascade update."
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Reference Update"
    ],
    "pageType": "guide",
    "title": "Reference Update",
    "section": "Using ",
    "route": "/en/advanced/reference-update",
    "fragment": "using-update-and-related-methods-for-cascade-updates",
    "content": "update"
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Reference Update"
    ],
    "pageType": "guide",
    "title": "Reference Update",
    "section": " and Related Methods for Cascade Updates",
    "route": "/en/advanced/reference-update",
    "fragment": "using-update-and-related-methods-for-cascade-updates",
    "content": "The methods and operations for cascading updates are similar to those for updating records."
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Reference Select From Join"
    ],
    "pageType": "guide",
    "title": "Reference Select From Join",
    "section": "Reference Select From Join",
    "route": "/en/advanced/reference-select-from-join",
    "fragment": "reference-select-from-join",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Reference Upsert"
    ],
    "pageType": "guide",
    "title": "Reference Upsert",
    "section": "Reference Upsert",
    "route": "/en/advanced/reference-upsert",
    "fragment": "reference-upsert",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Locks in Kronos"
    ],
    "pageType": "guide",
    "title": "Locks in Kronos",
    "section": "悲观锁",
    "route": "/en/advanced/some-locks",
    "fragment": "悲观锁",
    "content": "Kronos为查询(select)与更新插入(upsert)功能提供了悲观锁(lock)的功能，其锁等级为行锁 lock()方法可不接受参数或接收一个参数lock，其类型为枚举类PessimisticLock 目前可选择独占锁PessimisticLock.X或共享锁PessimisticLock.S两种类型的锁 以下仅为查询(select)时使用悲观锁的用法示例，在更新插入(upsert)时使用时仅需将.select()替换为.upsert()"
  },
  {
    "breadcrumbs": [
      "Advanced",
      "Locks in Kronos"
    ],
    "pageType": "guide",
    "title": "Locks in Kronos",
    "section": "乐观锁",
    "route": "/en/advanced/some-locks",
    "fragment": "乐观锁",
    "content": "Kronos提供乐观锁功能（具体的开启与使用方法见：[乐观锁策略]） 被设置为乐观锁的列（默认为version，接下来均以该列为例）在记录新建时会被设置成0，后续每次更新version = version + 1 在执行更新插入(upsert)操作时，会将version字段添加进筛选项，意为仅当Kpojo的该字段与数据库中修改次数一致时才会更新该条数据，否则则执行插入"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": "Kronos-orm is a multi-module project where we provide multiple modules for developers to choose from. Developers can select the modules according to their requirements. The modules are as follows:"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": "kronos-core"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": " is a "
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": "mandatory module"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": " that provides basic ORM functionalities."
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": "kronos-logging"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": " is an optional module that offers logging functionalities across multiple platforms."
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": "kronos-jvm-driver-wrapper"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": " is an optional module that provides a JVM driver wrapper. (You can easily use other official driver wrappers or write your own wrapper classes to work with third-party frameworks like SpringData, Mybatis, Hibernate, Jdbi, etc.) The "
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": "kronos-compiler-plugin"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": " plugin is a "
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": "mandatory module"
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Adding Dependencies:",
    "route": "/en/getting-started/quick-start",
    "fragment": "adding-dependencies",
    "content": " that provides compile-time support for Kronos ORM functionalities."
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Quick Start"
    ],
    "pageType": "guide",
    "title": "Quick Start",
    "section": "Configuring the Database:",
    "route": "/en/getting-started/quick-start",
    "fragment": "configuring-the-database",
    "content": "Here, we will only discuss the usage of the kronos-jvm-driver-wrapper module with MySQL. The usage for other modules is similar. For specifics, please refer to Connecting to the Database. Dependencies such as commons-dbcp2 and mysql-connector-java need to be included. When using other databases or non-JVM platforms, the corresponding driver and configuration need to be used."
  },
  {
    "breadcrumbs": [
      "Getting Started",
      "Welcome & Introduction"
    ],
    "pageType": "guide",
    "title": "Welcome & Introduction",
    "section": "Welcome & Introduction",
    "route": "/en/getting-started/welcome",
    "fragment": "welcome--introduction",
    "content": "Kronos ORM (Kotlin Reactive Object-Relational-Mapping) is a modern Kotlin ORM framework based on KCP and designed for K2. Kronos is a lightweight framework that provides developers with a simple solution for interacting with multiple databases. Kronos analyzes IR expression trees to simplify code logic, making ORM coding concise and semantic. Through a compiler plugin, we also provide a simple solution for converting between Pojo and Map. The design philosophy behind Kronos is to address the shortcomings of existing ORM frameworks and provide a more convenient and efficient data operation experience based on coroutines and task mechanisms."
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Connect to DB"
    ],
    "pageType": "guide",
    "title": "Connect to DB",
    "section": "Connect to DB",
    "route": "/en/database/connect-to-db",
    "fragment": "connect-to-db",
    "content": "Kronos访问数据库通过KronosDataSourceWrapper实现。 KronosDataSourceWrapper是一个接口，是对数据库操作的封装，它不关心具体的数据库连接细节，与平台无关，只关心数据库操作的逻辑： dbType：数据库类型url：数据库连接地址username：数据库用户名query：执行查询List"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Connect to DB"
    ],
    "pageType": "guide",
    "title": "Connect to DB",
    "section": "Connect to DB",
    "route": "/en/database/connect-to-db",
    "fragment": "connect-to-db",
    "content": ">：返回查询结果List"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Connect to DB"
    ],
    "pageType": "guide",
    "title": "Connect to DB",
    "section": "Connect to DB",
    "route": "/en/database/connect-to-db",
    "fragment": "connect-to-db",
    "content": "：返回查询结果的第一列Map"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Connect to DB"
    ],
    "pageType": "guide",
    "title": "Connect to DB",
    "section": "Connect to DB",
    "route": "/en/database/connect-to-db",
    "fragment": "connect-to-db",
    "content": "：返回查询结果的第一行T：返回查询结果的第一行的第一列execute：执行更新batch：批量执行更新transaction：事务"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Connect to DB"
    ],
    "pageType": "guide",
    "title": "Connect to DB",
    "section": "Connect to DB",
    "route": "/en/database/connect-to-db",
    "fragment": "connect-to-db",
    "content": "KronosDataSourceWrapper以扩展的形式在core中引入，这使得支持多平台、新数据库扩展和第三方框架集成成为可能。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Connect to DB"
    ],
    "pageType": "guide",
    "title": "Connect to DB",
    "section": "使用示例",
    "route": "/en/database/connect-to-db",
    "fragment": "使用示例",
    "content": "官方提供了jvm平台的基于JDBC的数据库连接插件，可以通过以下方式引入： 除此之外，可以通过如kronos-spring-data-wrapper、kronos-jdbi-wrapper、kronos-mybatis-wrapper等插件实现数据库连接，与Spring Data、JDBI、MyBatis等框架集成。 以下是对于kronos-jvm-driver-wrapper的使用示例"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Connect to DB"
    ],
    "pageType": "guide",
    "title": "Connect to DB",
    "section": "使用示例",
    "route": "/en/database/connect-to-db",
    "fragment": "使用示例",
    "content": "BasicDataSource是Apache Commons DBCP的一个简单的数据源实现，您可以更换为其他数据源实现。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Database Scheme Operation"
    ],
    "pageType": "guide",
    "title": "Database Scheme Operation",
    "section": "Database Scheme Operation",
    "route": "/en/database/database-operation",
    "fragment": "database-scheme-operation",
    "content": "相比于kotoframework, Kronos是一个Code-First的ORM框架，它增加了对于数据库表结构的操作。 相关功能可可以通过Kronos.dataSource(() -> KronosDataSourceWrapper)或某个具体的数据源对象(KronosDataSourceWrapper)来调用。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Database Scheme Operation"
    ],
    "pageType": "guide",
    "title": "Database Scheme Operation",
    "section": "1. 表是否存在",
    "route": "/en/database/database-operation",
    "fragment": "1-表是否存在",
    "content": "通过exists方法，可以判断表是否存在，返回true表示存在，false表示不存在。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Database Scheme Operation"
    ],
    "pageType": "guide",
    "title": "Database Scheme Operation",
    "section": "2. 创建表",
    "route": "/en/database/database-operation",
    "fragment": "2-创建表",
    "content": "通过createTable方法，可以创建表。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Database Scheme Operation"
    ],
    "pageType": "guide",
    "title": "Database Scheme Operation",
    "section": "3. 删除表",
    "route": "/en/database/database-operation",
    "fragment": "3-删除表",
    "content": "通过dropTable方法，可以删除表。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Database Scheme Operation"
    ],
    "pageType": "guide",
    "title": "Database Scheme Operation",
    "section": "4. 表结构同步和变更",
    "route": "/en/database/database-operation",
    "fragment": "4-表结构同步和变更",
    "content": "通过syncSchema方法，可以根据实体类的定义，自动同步表结构。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Database Scheme Operation"
    ],
    "pageType": "guide",
    "title": "Database Scheme Operation",
    "section": "5. 动态建表",
    "route": "/en/database/database-operation",
    "fragment": "5-动态建表",
    "content": "部分情况下会存在动态建表的需求，此时可以通过getTableCreateSqlList方法动态获取建表语句并执行。 getTableCreateSqlList接收的参数包括： dbType：DBType 数据库类型tableName：String 表名fields：List"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Database Scheme Operation"
    ],
    "pageType": "guide",
    "title": "Database Scheme Operation",
    "section": "5. 动态建表",
    "route": "/en/database/database-operation",
    "fragment": "5-动态建表",
    "content": " 字段列表indexes：List"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Database Scheme Operation"
    ],
    "pageType": "guide",
    "title": "Database Scheme Operation",
    "section": "5. 动态建表",
    "route": "/en/database/database-operation",
    "fragment": "5-动态建表",
    "content": " 索引列表"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Database Scheme Operation"
    ],
    "pageType": "guide",
    "title": "Database Scheme Operation",
    "section": "5. 动态建表",
    "route": "/en/database/database-operation",
    "fragment": "5-动态建表",
    "content": "若需要对同一个实体对象连续执行多个数据库操作，建议不要使用泛型，以避免多次创建KPojo对象，产生不必要的开销。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Insert Records"
    ],
    "pageType": "guide",
    "title": "Insert Records",
    "section": "插入单条记录",
    "route": "/en/database/insert-records",
    "fragment": "插入单条记录",
    "content": "在Kronos中，我们可以使用KPojo.insert().execute()方法向数据库中插入一条记录。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Insert Records"
    ],
    "pageType": "guide",
    "title": "Insert Records",
    "section": "自增主键和影响行数",
    "route": "/en/database/insert-records",
    "fragment": "自增主键和影响行数",
    "content": "在Kronos中，我们可以使用KPojo.insert().execute()方法向数据库中插入一条记录，当主键为自增时，Kronos会自动获取自增主键的值。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Insert Records"
    ],
    "pageType": "guide",
    "title": "Insert Records",
    "section": "批量插入记录",
    "route": "/en/database/insert-records",
    "fragment": "批量插入记录",
    "content": "在Kronos中，我们可以使用Iterable"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Insert Records"
    ],
    "pageType": "guide",
    "title": "Insert Records",
    "section": "批量插入记录",
    "route": "/en/database/insert-records",
    "fragment": "批量插入记录",
    "content": ".insert().execute()或Array"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Insert Records"
    ],
    "pageType": "guide",
    "title": "Insert Records",
    "section": "批量插入记录",
    "route": "/en/database/insert-records",
    "fragment": "批量插入记录",
    "content": ".insert().execute()方法向数据库中批量插入记录。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Insert Records"
    ],
    "pageType": "guide",
    "title": "Insert Records",
    "section": "指定使用的数据源",
    "route": "/en/database/insert-records",
    "fragment": "指定使用的数据源",
    "content": "在Kronos中，我们可以将KronosDataSourceWrapper传入execute方法，以实现自定义的数据库连接。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "根据KPojo对象值生成条件语句并删除记录",
    "route": "/en/database/delete-records",
    "fragment": "根据kpojo对象值生成条件语句并删除记录",
    "content": "在Kronos中，我们可以使用KPojo.delete().execute()方法用于删除数据库中的记录 当未使用by或where方法时，Kronos会根据KPojo对象的值生成删除条件语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "根据KPojo对象值生成条件语句并删除记录",
    "route": "/en/database/delete-records",
    "fragment": "根据kpojo对象值生成条件语句并删除记录",
    "content": "null值不会被包含在删除条件中，即null值不会被用于生成删除条件语句，若需要删除null值，请使用where方法设置删除条件。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "使用",
    "route": "/en/database/delete-records",
    "fragment": "使用by设置删除条件",
    "content": "by"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "设置删除条件",
    "route": "/en/database/delete-records",
    "fragment": "使用by设置删除条件",
    "content": "在Kronos中，我们可以使用by方法设置删除条件，此时Kronos会根据by方法设置的字段生成删除条件语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "使用",
    "route": "/en/database/delete-records",
    "fragment": "使用where设置删除条件",
    "content": "where"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "设置删除条件",
    "route": "/en/database/delete-records",
    "fragment": "使用where设置删除条件",
    "content": "在Kronos中，我们可以使用where方法设置删除条件，此时Kronos会根据where方法设置的条件生成删除条件语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "逻辑删除",
    "route": "/en/database/delete-records",
    "fragment": "逻辑删除",
    "content": "在Kronos中，我们可以使用logic方法设置逻辑删除，此时Kronos会生成逻辑删除的SQL语句。 逻辑删除的开启与字段设置设置请参考 逻辑删除策略及表逻辑删除"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "影响行数",
    "route": "/en/database/delete-records",
    "fragment": "影响行数",
    "content": "execute方法返回的KronosOperationResult对象中包含了影响行数。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "批量删除记录",
    "route": "/en/database/delete-records",
    "fragment": "批量删除记录",
    "content": "在Kronos中，我们可以使用Iterable"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "批量删除记录",
    "route": "/en/database/delete-records",
    "fragment": "批量删除记录",
    "content": ".delete().execute()或Array"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "批量删除记录",
    "route": "/en/database/delete-records",
    "fragment": "批量删除记录",
    "content": ".delete().execute()方法删除数据库中的记录。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Delete Records"
    ],
    "pageType": "guide",
    "title": "Delete Records",
    "section": "指定使用的数据源",
    "route": "/en/database/delete-records",
    "fragment": "指定使用的数据源",
    "content": "在Kronos中，我们可以将KronosDataSourceWrapper传入execute方法，以实现自定义的数据库连接。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "Sql Statement Execution (Named Arguments)",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "sql-statement-execution-named-arguments",
    "content": "Kronos提供了一个基础的SQL查询构建器，它允许您使用命名参数来构建SQL查询。这个构建器是一个简单的构建器，它允许您构建一个SQL查询，然后使用命名参数来填充查询中的参数。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "使用",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用query查询map列表",
    "content": "query"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询Map列表",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用query查询map列表",
    "content": "KronosDataSourceWrapper.query() sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询Map列表",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用query查询map列表",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "使用",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "queryList"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询List",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "queryList方法用于执行查询并返回指定类型列表，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryList"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询List",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询List",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryList"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询List",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询List",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "KronosDataSourceWrapper.queryList() T 查询结果类型sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询List",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "使用",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querymap查询map",
    "content": "queryMap"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询Map",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querymap查询map",
    "content": "若查询结果只有一行，可以使用queryMap方法，返回一个Map"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询Map",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querymap查询map",
    "content": "对象。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询Map",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querymap查询map",
    "content": "若查询结果为空，返回null。 KronosDataSourceWrapper.queryMap() sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询Map",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用querymap查询map",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "使用",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "queryOne"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "queryOne方法用于执行查询并返回单条记录，当查询结果为空时，抛出异常，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryOne"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryOne"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "KronosDataSourceWrapper.queryOne() T 查询结果类型sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "使用",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录(可空)",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "queryOneOrNull方法用于执行查询并返回单条记录，当查询结果为空时，返回null，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录(可空)",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录(可空)",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录(可空)",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录(可空)",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "KronosDataSourceWrapper.queryOneOrNull() T 查询结果类型sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "查询单条记录(可空)",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "使用",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用execute执行sql",
    "content": "execute"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "执行SQL",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用execute执行sql",
    "content": "execute方法用于执行SQL语句，返回受影响的行数。 KronosDataSourceWrapper.execute() sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "执行SQL",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用execute执行sql",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "使用",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用batchexecute批量执行sql",
    "content": "batchExecute"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "批量执行SQL",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用batchexecute批量执行sql",
    "content": "batchExecute方法用于批量执行SQL语句，返回受影响的行数。 KronosDataSourceWrapper.batchExecute() sql String SQL查询语句params Array"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Sql Statement Execution (Named Arguments)"
    ],
    "pageType": "guide",
    "title": "Sql Statement Execution (Named Arguments)",
    "section": "批量执行SQL",
    "route": "/en/database/named-arguments-base-sql",
    "fragment": "使用batchexecute批量执行sql",
    "content": "> 命名参数列表"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "No Value Strategy"
    ],
    "pageType": "guide",
    "title": "No Value Strategy",
    "section": "No Value Strategy",
    "route": "/en/database/no-value-strategy",
    "fragment": "no-value-strategy",
    "content": "什么是无值策略"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "No Value Strategy"
    ],
    "pageType": "guide",
    "title": "No Value Strategy",
    "section": "No Value Strategy",
    "route": "/en/database/no-value-strategy",
    "fragment": "no-value-strategy",
    "content": "无值策略是查询条件语句Criteria中的一种策略，当条件语句可接收右值时，如果右值为null，那么将会使用无值策略。 2.哪些条件语句支持无值策略 目前支持无值策略的条件语句有：==、!=、>、<、>=、<=、in、contains、like、between、notBetween、like、notLike、matchLeft、matchRight、matchBoth、regexp、asSql等。 3.如何使用无值策略 4.无值策略的类型 目前支持的无值策略有： Ignore：忽略该条件语句False：条件语句为falseTrue：条件语句为trueJudgeNull：转换为is null或is not nullSmart：根据当前语境自动判断 5.默认无值策略smart的判断逻辑 当条件语句可接收右值时，如果右值为null，那么将会使用无值策略。 当条件类型为相等判断时，将其修改为对应的null判断，如==修改为is null，!=修改为is not null。 当条件为like、in、between或数值判断时，直接认定条件为假。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select from Join Tables"
    ],
    "pageType": "guide",
    "title": "Select from Join Tables",
    "section": "查询多表关联数据",
    "route": "/en/database/select-from-join",
    "fragment": "查询多表关联数据",
    "content": "在Kronos中，我们可以使用KPojo.join(KPojo1, KPojo2, ...)方法来查询多表关联数据。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select from Join Tables"
    ],
    "pageType": "guide",
    "title": "Select from Join Tables",
    "section": "指定连接条件及连接方式",
    "route": "/en/database/select-from-join",
    "fragment": "指定连接条件及连接方式",
    "content": "在Kronos中，我们默认使用left join连接多表，如果不需要指定连接方式，可以使用on方法指定连接条件。 可以通过leftJoin、rightJoin、innerJoin、crossJoin、fullJoin等函数同时指定连接方式和连接条件。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select from Join Tables"
    ],
    "pageType": "guide",
    "title": "Select from Join Tables",
    "section": "指定连接数据表的数据库（跨库连表查询）",
    "route": "/en/database/select-from-join",
    "fragment": "指定连接数据表的数据库跨库连表查询",
    "content": "在Kronos中，我们可以使用db方法指定查询字段。 将一张或多张表与其所处的数据库名组合通过一个或多个Pair类作为参数传入该方法进行跨库连表查询"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select from Join Tables"
    ],
    "pageType": "guide",
    "title": "Select from Join Tables",
    "section": "使用",
    "route": "/en/database/select-from-join",
    "fragment": "使用select方法指定查询字段",
    "content": "select"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select from Join Tables"
    ],
    "pageType": "guide",
    "title": "Select from Join Tables",
    "section": "方法指定查询字段",
    "route": "/en/database/select-from-join",
    "fragment": "使用select方法指定查询字段",
    "content": "在Kronos中，我们可以使用select方法指定查询字段，多个字段之间使用+连接。 可以使用as为字段指定别名，如select { user.id + user.name.`as`(\"userName\") + userInfo.age }。 如需要查询某张表的所有字段，可以使用select { user }、select { user + userInfo + userTeam.teamId }。 不指定查询字段时，默认查询所有字段，我们会对不同表相同字段进行重新命名，以避免字段冲突。 可以使用字符串作为自定义查询字段，如select { \"count(`user.id`)\".as(\"count\") }。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select from Join Tables"
    ],
    "pageType": "guide",
    "title": "Select from Join Tables",
    "section": "使用",
    "route": "/en/database/select-from-join",
    "fragment": "使用query方法执行查询",
    "content": "query"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询所有记录",
    "route": "/en/database/select-records",
    "fragment": "查询所有记录",
    "content": "在Kronos中，我们可以使用KPojo.select()方法用于查询数据库中的记录。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用select指定查询字段",
    "content": "select"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "指定查询字段",
    "route": "/en/database/select-records",
    "fragment": "使用select指定查询字段",
    "content": "select方法用于指定查询字段，此时Kronos会根据select方法设置的字段生成查询字段语句。 可以传入字符串作为查询字段，使用+连接多个字段，as方法用于设置字段别名。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "根据KPojo对象值生成条件语句并查询记录",
    "route": "/en/database/select-records",
    "fragment": "根据kpojo对象值生成条件语句并查询记录",
    "content": "当未使用by或where方法时，Kronos会根据KPojo对象的值生成查询条件语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "根据KPojo对象值生成条件语句并查询记录",
    "route": "/en/database/select-records",
    "fragment": "根据kpojo对象值生成条件语句并查询记录",
    "content": "null值不会被包含在查询条件中，即null值不会被用于生成查询条件语句，若需要查询null值，请使用where方法设置查询条件。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用by设置查询条件",
    "content": "by"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "设置查询条件",
    "route": "/en/database/select-records",
    "fragment": "使用by设置查询条件",
    "content": "by方法用于设置查询条件，此时Kronos会根据by方法设置的字段生成查询条件语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用where设置查询条件",
    "content": "where"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "设置查询条件",
    "route": "/en/database/select-records",
    "fragment": "使用where设置查询条件",
    "content": "where方法用于设置查询条件，此时Kronos会根据where方法设置的字段生成查询条件语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用patch为自定义查询条件添加参数",
    "content": "patch"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "为自定义查询条件添加参数",
    "route": "/en/database/select-records",
    "fragment": "使用patch为自定义查询条件添加参数",
    "content": "当where条件内包含自定义Sql如：where { \"id = :id\".asSql() }时，可以使用patch方法为自定义查询条件添加参数。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用orderby设置排序条件",
    "content": "orderBy"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "设置排序条件",
    "route": "/en/database/select-records",
    "fragment": "使用orderby设置排序条件",
    "content": "orderBy方法用于设置排序条件，此时Kronos会根据orderBy方法设置的字段生成排序条件语句。 使用asc方法设置升序排序，使用desc方法设置降序排序。 当不设置排序方法时，默认为升序排序，如：orderBy { it.id }。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用groupby和having设置分组和聚合条件",
    "content": "groupBy"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "和",
    "route": "/en/database/select-records",
    "fragment": "使用groupby和having设置分组和聚合条件",
    "content": "having"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "设置分组和聚合条件",
    "route": "/en/database/select-records",
    "fragment": "使用groupby和having设置分组和聚合条件",
    "content": "groupBy方法用于设置分组条件，having方法用于设置聚合条件。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用limit设置查询记录数",
    "content": "limit"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "设置查询记录数",
    "route": "/en/database/select-records",
    "fragment": "使用limit设置查询记录数",
    "content": "limit方法用于设置查询记录数，此时Kronos会根据limit方法设置的记录数生成查询条件语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用lock设置查询时行锁",
    "content": "lock"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "设置查询时行锁",
    "route": "/en/database/select-records",
    "fragment": "使用lock设置查询时行锁",
    "content": "lock方法用于设置查询时行锁，此时Kronos会根据lock方法设置的锁类型进行锁的添加。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用page设置分页查询",
    "content": "page"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "设置分页查询",
    "route": "/en/database/select-records",
    "fragment": "使用page设置分页查询",
    "content": "page方法用于设置分页查询，请注意，page方法的参数从1开始。 在不同的数据库中，分页查询的语法有所不同，Kronos会根据不同的数据库生成相应的分页查询语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "设置分页查询",
    "route": "/en/database/select-records",
    "fragment": "使用page设置分页查询",
    "content": "使用page方法后，查询的结果默认不会包含总记录数，若需要查询总记录数，请使用withTotal方法。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用db设置查询数据库跨库查询",
    "content": "db"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "设置查询数据库（跨库查询）",
    "route": "/en/database/select-records",
    "fragment": "使用db设置查询数据库跨库查询",
    "content": "db方法用于跨库查询，此时Kronos会根据db方法的参数设置查询的数据库。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用single方法查询单条记录",
    "content": "single"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "方法查询单条记录",
    "route": "/en/database/select-records",
    "fragment": "使用single方法查询单条记录",
    "content": "single方法实际上是limit(1)的简写，用于查询单条记录。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用query方法查询map列表",
    "content": "query"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "方法查询Map列表",
    "route": "/en/database/select-records",
    "fragment": "使用query方法查询map列表",
    "content": "query方法用于执行查询并返回Map列表。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "queryList"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询指定类型列表",
    "route": "/en/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "queryList方法用于执行查询并返回指定类型列表，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryList"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询指定类型列表",
    "route": "/en/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询指定类型列表",
    "route": "/en/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryList"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询指定类型列表",
    "route": "/en/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询指定类型列表",
    "route": "/en/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "当未设置泛型参数时，Kronos会根据查询结果自动转换为查询的KPojo类型。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询指定类型列表",
    "route": "/en/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "queryList使用KCP实现Map转换为KPojo，详见：KPojo与Map互相转换"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用querymap查询map",
    "content": "queryMap"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询Map",
    "route": "/en/database/select-records",
    "fragment": "使用querymap查询map",
    "content": "queryMap方法用于执行查询并返回Map，当查询结果为空时，返回null。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "queryOne"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录",
    "route": "/en/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "queryOne方法用于执行查询并返回单条记录，当查询结果为空时，抛出异常，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryOne"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录",
    "route": "/en/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录",
    "route": "/en/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryOne"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录",
    "route": "/en/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录",
    "route": "/en/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "当未设置泛型参数时，Kronos会根据查询结果自动转换为查询的KPojo类型。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录",
    "route": "/en/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "queryOne使用KCP实现Map转换为KPojo，详见：KPojo与Map互相转换"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录（可空）",
    "route": "/en/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "和queryOne方法类似，queryOneOrNull方法用于执行查询并返回单条记录，当查询结果为空时，返回null，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录（可空）",
    "route": "/en/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录（可空）",
    "route": "/en/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录（可空）",
    "route": "/en/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录（可空）",
    "route": "/en/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "当未设置泛型参数时，Kronos会根据查询结果自动转换为查询的KPojo类型。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询单条记录（可空）",
    "route": "/en/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "queryOneOrNull使用KCP实现Map转换为KPojo，详见：KPojo与Map互相转换"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用",
    "route": "/en/database/select-records",
    "fragment": "使用withtotal查询带有总记录数的分页查询",
    "content": "withTotal"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "查询带有总记录数的分页查询",
    "route": "/en/database/select-records",
    "fragment": "使用withtotal查询带有总记录数的分页查询",
    "content": "withTotal方法用于查询带有总记录数的分页查询，此时Kronos会在查询结果中包含总记录数。 withTotal方法返回一个PageClause对象，您可以通过query、queryList等方法获取查询结果。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Select Records"
    ],
    "pageType": "guide",
    "title": "Select Records",
    "section": "使用指定的数据源",
    "route": "/en/database/select-records",
    "fragment": "使用指定的数据源",
    "content": "在Kronos中，我们可以使用指定的数据源查询数据库中的记录。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "使用",
    "route": "/en/database/update-records",
    "fragment": "使用set设置更新的字段和值",
    "content": "set"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "设置更新的字段和值",
    "route": "/en/database/update-records",
    "fragment": "使用set设置更新的字段和值",
    "content": "在Kronos中，我们可以使用KPojo.update().set方法设置需要更新的字段和值，然后使用execute方法执行更新操作。 当未使用by或where方法时，Kronos会根据KPojo对象的值生成更新条件语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "设置更新的字段和值",
    "route": "/en/database/update-records",
    "fragment": "使用set设置更新的字段和值",
    "content": "null值不会被包含在更新条件中，即null值不会被用于生成更新条件语句，若需要更新null值，请使用where方法设置更新条件。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "使用",
    "route": "/en/database/update-records",
    "fragment": "使用by设置更新条件",
    "content": "by"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "设置更新条件",
    "route": "/en/database/update-records",
    "fragment": "使用by设置更新条件",
    "content": "在Kronos中，我们可以使用by方法设置更新条件，此时Kronos会根据by方法设置的字段生成更新条件语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "使用",
    "route": "/en/database/update-records",
    "fragment": "使用where设置更新条件",
    "content": "where"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "设置更新条件",
    "route": "/en/database/update-records",
    "fragment": "使用where设置更新条件",
    "content": "在Kronos中，我们可以使用where方法设置更新条件，此时Kronos会根据where方法设置的字段生成更新条件语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "使用",
    "route": "/en/database/update-records",
    "fragment": "使用update设置需要更新的字段",
    "content": "update"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "设置需要更新的字段",
    "route": "/en/database/update-records",
    "fragment": "使用update设置需要更新的字段",
    "content": "在Kronos中，我们在update方法中设置需要更新的字段，未在update方法中设置的字段将不会被更新。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "使用",
    "route": "/en/database/update-records",
    "fragment": "使用updateexcept设置需要排除的字段",
    "content": "updateExcept"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "设置需要排除的字段",
    "route": "/en/database/update-records",
    "fragment": "使用updateexcept设置需要排除的字段",
    "content": "在Kronos中，我们可以使用updateExcept方法设置需要排除的字段，未在updateExcept方法中设置的字段将会被更新。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "影响行数",
    "route": "/en/database/update-records",
    "fragment": "影响行数",
    "content": "在Kronos中，我们可以使用execute方法执行更新操作，并获取更新操作的影响行数。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "批量更新记录",
    "route": "/en/database/update-records",
    "fragment": "批量更新记录",
    "content": "在Kronos中，我们可以使用Iterable"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "批量更新记录",
    "route": "/en/database/update-records",
    "fragment": "批量更新记录",
    "content": ".update().execute()或Array"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "批量更新记录",
    "route": "/en/database/update-records",
    "fragment": "批量更新记录",
    "content": ".update().execute()方法用于批量更新数据库中的记录。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update Records"
    ],
    "pageType": "guide",
    "title": "Update Records",
    "section": "指定使用的数据源",
    "route": "/en/database/update-records",
    "fragment": "指定使用的数据源",
    "content": "在Kronos中，我们可以将KronosDataSourceWrapper传入execute方法，以实现自定义的数据库连接。"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "级联删除"
    ],
    "pageType": "guide",
    "title": "级联删除",
    "section": "级联删除",
    "route": "/zh-CN/advanced/reference-delete",
    "fragment": "级联删除",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "Update or Insert Records",
    "route": "/en/database/upsert-records",
    "fragment": "update-or-insert-records",
    "content": "在Kronos中，我们可以使用KPojo.upsert().execute()方法用于向数据库中插入或更新记录。 由于各个数据库的实现不同，因此在Kronos中，我们对upsert操作进行了统一的封装，以实现跨数据库的兼容性。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "使用",
    "route": "/en/database/upsert-records",
    "fragment": "使用on设置唯一性约束字段",
    "content": "on"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "设置唯一性约束字段",
    "route": "/en/database/upsert-records",
    "fragment": "使用on设置唯一性约束字段",
    "content": "on方法用于唯一性设置约束字段，可以是单个字段，也可以是多个字段。当记录存在时，Kronos会根据on方法设置的字段生成更新条件语句，否则生成插入语句。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "使用",
    "route": "/en/database/upsert-records",
    "fragment": "使用upsert设置更新字段",
    "content": "upsert"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "设置更新字段",
    "route": "/en/database/upsert-records",
    "fragment": "使用upsert设置更新字段",
    "content": "用于指定当记录存在时需要更新的字段。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "使用",
    "route": "/en/database/upsert-records",
    "fragment": "使用upsertexcept设置不更新的字段",
    "content": "upsertExcept"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "设置不更新的字段",
    "route": "/en/database/upsert-records",
    "fragment": "使用upsertexcept设置不更新的字段",
    "content": "用于指定当记录存在时不需要更新的字段。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "使用",
    "route": "/en/database/upsert-records",
    "fragment": "使用onconflict设置处理策略为冲突时更新",
    "content": "onConflict"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "设置处理策略为冲突时更新",
    "route": "/en/database/upsert-records",
    "fragment": "使用onconflict设置处理策略为冲突时更新",
    "content": "当使用upsert方法时，我们可以使用onConflict方法设置处理策略为冲突时更新，即当记录存在时，更新记录。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "使用",
    "route": "/en/database/upsert-records",
    "fragment": "使用lock设置查询时行锁",
    "content": "lock"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "设置查询时行锁",
    "route": "/en/database/upsert-records",
    "fragment": "使用lock设置查询时行锁",
    "content": "limit方法用于设置查询时行锁，此时Kronos会根据lock方法设置的锁类型进行锁的添加。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "影响行数",
    "route": "/en/database/upsert-records",
    "fragment": "影响行数",
    "content": "在Kronos中，我们可以使用upsert方法的execute方法获取影响行数。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "批量更新或插入记录",
    "route": "/en/database/upsert-records",
    "fragment": "批量更新或插入记录",
    "content": "在Kronos中，我们可以使用Iterable"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "批量更新或插入记录",
    "route": "/en/database/upsert-records",
    "fragment": "批量更新或插入记录",
    "content": ".upsert().execute()或Array"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "批量更新或插入记录",
    "route": "/en/database/upsert-records",
    "fragment": "批量更新或插入记录",
    "content": ".upsert().execute()方法批量更新或插入记录。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Update or Insert Records"
    ],
    "pageType": "guide",
    "title": "Update or Insert Records",
    "section": "指定使用的数据源",
    "route": "/en/database/upsert-records",
    "fragment": "指定使用的数据源",
    "content": "在Kronos中，我们可以将KronosDataSourceWrapper传入execute方法，以实现自定义的数据库连接。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "1.Criteria 条件对象",
    "route": "/en/database/where-having-on-clause",
    "fragment": "1criteria-条件对象",
    "content": "Kronos使用Criteria对象构建条件表达式，并且支持复杂的条件组合，如and、or、not等，用于where、having、on等条件中。 你可以使用where条件对象组成复杂的查询条件在select、delete、update、join中使用，形如 基于KCP，Kronos允许你使用真实的kotlin操作符来构建Criteria查询条件，如==、!=、>、<、>=、<=、in、|| 、&&等，而不是其他框架中eq、ne、gt、lt、ge、le等自定义操作符，而从表达式到Criteria对象的转换是在编译期完成的。 kronos表达式支持动态构建条件和根据对象的属性自动生成条件，并且支持传入sql字符串作为条件。 使用kronos就像在写原生的kotlin代码一样，这将大大提高开发效率和降低学习成本及心智负担。"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "2.支持的函数和操作符",
    "route": "/en/database/where-having-on-clause",
    "fragment": "2支持的函数和操作符",
    "content": "Kronos支持的函数和操作符如下："
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "2.1.操作符",
    "route": "/en/database/where-having-on-clause",
    "fragment": "21操作符",
    "content": "==：等于!=：不等于>：大于<：小于>=：大于等于<=：小于等于in：在范围内，也可以使用contains代替，如a in b可以写成b.contains(a)||：或&&：与!：非，可以与其他函数和操作符一起使用，如!(a == 1 || a == 2) && a !in listOf(3, 4)"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "between",
    "route": "/en/database/where-having-on-clause",
    "fragment": "between",
    "content": "在范围内，接收ClosedRange类型的参数"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "notBetween",
    "route": "/en/database/where-having-on-clause",
    "fragment": "notbetween",
    "content": "不在范围内，接收ClosedRange类型的参数"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "like",
    "route": "/en/database/where-having-on-clause",
    "fragment": "like",
    "content": "模糊查询，接收String类型的参数"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "matchLeft",
    "route": "/en/database/where-having-on-clause",
    "fragment": "matchleft",
    "content": "左模糊查询，接收String类型的参数，可以不传入参数，如it.name.matchLeft() 或 it.name.matchLeft"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "matchRight",
    "route": "/en/database/where-having-on-clause",
    "fragment": "matchright",
    "content": "右模糊查询，接收String类型的参数，可以不传入参数，如it.name.matchRight() 或 it.name.matchRight"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "matchBoth",
    "route": "/en/database/where-having-on-clause",
    "fragment": "matchboth",
    "content": "全模糊查询，接收String类型的参数，可以不传入参数，如it.name.matchBoth() 或 it.name.matchBoth"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "notLike",
    "route": "/en/database/where-having-on-clause",
    "fragment": "notlike",
    "content": "不匹配，接收String类型的参数"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "isNull",
    "route": "/en/database/where-having-on-clause",
    "fragment": "isnull",
    "content": "为空"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "notNull",
    "route": "/en/database/where-having-on-clause",
    "fragment": "notnull",
    "content": "不为空"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "regexp",
    "route": "/en/database/where-having-on-clause",
    "fragment": "regexp",
    "content": "正则表达式查询，接收String类型的参数"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "asSql",
    "route": "/en/database/where-having-on-clause",
    "fragment": "assql",
    "content": "自定义SQL查询条件，接收String类型的参数"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "eq",
    "route": "/en/database/where-having-on-clause",
    "fragment": "eq",
    "content": "等于，等同于==，可以不传入参数，如it.name.eq() 或 it.name.eq"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "notEq",
    "route": "/en/database/where-having-on-clause",
    "fragment": "noteq",
    "content": "不等于，等同于!=，但是可以不传入参数，如it.name.notEq() 或 it.name.notEq"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "gt",
    "route": "/en/database/where-having-on-clause",
    "fragment": "gt",
    "content": "大于，等同于>，可以不传入参数，如it.age.gt() 或 it.age.gt"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "lt",
    "route": "/en/database/where-having-on-clause",
    "fragment": "lt",
    "content": "小于，等同于<，可以不传入参数，如it.age.lt() 或 it.age.lt"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "ge",
    "route": "/en/database/where-having-on-clause",
    "fragment": "ge",
    "content": "大于等于，等同于>=，可以不传入参数，如it.age.ge() 或 it.age.ge"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "le",
    "route": "/en/database/where-having-on-clause",
    "fragment": "le",
    "content": "小于等于，等同于<=，可以不传入参数，如it.age.le() 或 it.age.le"
  },
  {
    "breadcrumbs": [
      "Database Operations",
      "Criteria for Filtering Records"
    ],
    "pageType": "guide",
    "title": "Criteria for Filtering Records",
    "section": "ifNoValue",
    "route": "/en/database/where-having-on-clause",
    "fragment": "ifnovalue",
    "content": "无值策略，接收参数NoValueStrategy，用于处理无值的情况，优先级高于Kronos默认的无值策略，详见：无值策略"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "级联插入"
    ],
    "pageType": "guide",
    "title": "级联插入",
    "section": "级联插入",
    "route": "/zh-CN/advanced/reference-insert",
    "fragment": "级联插入",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "级联查询"
    ],
    "pageType": "guide",
    "title": "级联查询",
    "section": "级联查询",
    "route": "/zh-CN/advanced/reference-select",
    "fragment": "级联查询",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "级联连表查询"
    ],
    "pageType": "guide",
    "title": "级联连表查询",
    "section": "级联连表查询",
    "route": "/zh-CN/advanced/reference-select-from-join",
    "fragment": "级联连表查询",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "级联更新"
    ],
    "pageType": "guide",
    "title": "级联更新",
    "section": "配置级联关系",
    "route": "/zh-CN/advanced/reference-update",
    "fragment": "配置级联关系",
    "content": "通过配置KPojo的[列关联设置]，指定关联字段关联信息（@Reference）中usage属性包含Update（或不指定，使用默认），即可开启该类（被）级联更新的功能。"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "级联更新"
    ],
    "pageType": "guide",
    "title": "级联更新",
    "section": "使用",
    "route": "/zh-CN/advanced/reference-update",
    "fragment": "使用cascade设置当前级联操作",
    "content": "cascade"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "级联更新"
    ],
    "pageType": "guide",
    "title": "级联更新",
    "section": "设置当前级联操作",
    "route": "/zh-CN/advanced/reference-update",
    "fragment": "使用cascade设置当前级联操作",
    "content": "在Kronos中，我们可以使用cascade方法设置是否开启本次更新的级联功能并限制级联的最大层数 KPojo.update().cascade().excute() enabled： Boolean 手动设置是否开启本次更新的级联功能（可选，默认为true开启级联）depth： Int 限制级联的最大层数，默认为-1，即不限制级联层数， 0表示不进行级联更新"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "级联更新"
    ],
    "pageType": "guide",
    "title": "级联更新",
    "section": "使用",
    "route": "/zh-CN/advanced/reference-update",
    "fragment": "使用update及相关方法进行级联更新操作",
    "content": "update"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "级联更新"
    ],
    "pageType": "guide",
    "title": "级联更新",
    "section": "及相关方法进行级联更新操作",
    "route": "/zh-CN/advanced/reference-update",
    "fragment": "使用update及相关方法进行级联更新操作",
    "content": "级联更新的各方法与操作同更新记录相关方法与操作基本一致。"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "级联更新插入"
    ],
    "pageType": "guide",
    "title": "级联更新插入",
    "section": "级联更新插入",
    "route": "/zh-CN/advanced/reference-upsert",
    "fragment": "级联更新插入",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "加锁机制"
    ],
    "pageType": "guide",
    "title": "加锁机制",
    "section": "悲观锁",
    "route": "/zh-CN/advanced/some-locks",
    "fragment": "悲观锁",
    "content": "Kronos为查询(select)与更新插入(upsert)功能提供了悲观锁(lock)的功能，其锁等级为行锁 lock()方法可不接受参数或接收一个参数lock，其类型为枚举类PessimisticLock 目前可选择独占锁PessimisticLock.X或共享锁PessimisticLock.S两种类型的锁 以下仅为查询(select)时使用悲观锁的用法示例，在更新插入(upsert)时使用时仅需将.select()替换为.upsert()"
  },
  {
    "breadcrumbs": [
      "进阶用法",
      "加锁机制"
    ],
    "pageType": "guide",
    "title": "加锁机制",
    "section": "乐观锁",
    "route": "/zh-CN/advanced/some-locks",
    "fragment": "乐观锁",
    "content": "Kronos提供乐观锁功能（具体的开启与使用方法见：[乐观锁策略]） 被设置为乐观锁的列（默认为version，接下来均以该列为例）在记录新建时会被设置成0，后续每次更新version = version + 1 在执行更新插入(upsert)操作时，会将version字段添加进筛选项，意为仅当Kpojo的该字段与数据库中修改次数一致时才会更新该条数据，否则则执行插入"
  },
  {
    "breadcrumbs": [
      "Plugins",
      "Driver for connection and Third-Party Framework"
    ],
    "pageType": "guide",
    "title": "Driver for connection and Third-Party Framework",
    "section": "Driver for connection and Third-Party Framework",
    "route": "/en/plugin/datasource-wrapper-and-third-part-framework",
    "fragment": "driver-for-connection-and-third-party-framework",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "Plugins",
      "Database Support"
    ],
    "pageType": "guide",
    "title": "Database Support",
    "section": "Database Support",
    "route": "/en/plugin/database-support",
    "fragment": "database-support",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "Plugins",
      "Language Extension"
    ],
    "pageType": "guide",
    "title": "Language Extension",
    "section": "Language Extension",
    "route": "/en/plugin/language",
    "fragment": "language-extension",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "规定级联删除时的操作，详见级联删除。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "CASCADE"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": " 级联删除"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "RESTRICT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": " 限制删除，如果有关联数据，不允许删除"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "SET_NULL"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": " 设置为"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "null"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "NO_ACTION"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "默认"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "，不做任何操作"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "SET_DEFAULT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": " 设置为默认值，默认值需要在字段定义时指定"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "defaultValue"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "级联删除操作"
    ],
    "pageType": "guide",
    "title": "级联删除操作",
    "section": "级联删除操作",
    "route": "/zh-CN/class-definition/cascade-delete-action",
    "fragment": "级联删除操作",
    "content": "属性"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "通用策略"
    ],
    "pageType": "guide",
    "title": "通用策略",
    "section": "通用策略",
    "route": "/zh-CN/class-definition/common-strategy",
    "fragment": "通用策略",
    "content": "KronosCommonStrategy是更新时间/创建时间/逻辑删除配置策略的通用配置策略接口。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "通用策略"
    ],
    "pageType": "guide",
    "title": "通用策略",
    "section": "参数：",
    "route": "/zh-CN/class-definition/common-strategy",
    "fragment": "参数",
    "content": "enable"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "通用策略"
    ],
    "pageType": "guide",
    "title": "通用策略",
    "section": "参数：",
    "route": "/zh-CN/class-definition/common-strategy",
    "fragment": "参数",
    "content": "Boolean类型，表示是否启用该策略。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "通用策略"
    ],
    "pageType": "guide",
    "title": "通用策略",
    "section": "参数：",
    "route": "/zh-CN/class-definition/common-strategy",
    "fragment": "参数",
    "content": "field"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "通用策略"
    ],
    "pageType": "guide",
    "title": "通用策略",
    "section": "参数：",
    "route": "/zh-CN/class-definition/common-strategy",
    "fragment": "参数",
    "content": "Field类型，表示对应的字段名。 其中需要指定的字段名属性包括name和columnName。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "各数据库类型与常用类型对应关系一览表："
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "BIT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store 0/1 KotlinType: Boolean"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "TINYINT(1) NUMBER(1) BIT BOOLEAN INTEGER"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "TINYINT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store -128~127 KotlinType: Byte"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "TINYINT NUMBER(3) TINYINT SMALLINT INTEGER"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "SMALLINT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store -32768~32767 KotlinType: Short"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "SMALLINT NUMBER(5) SMALLINT SMALLINT INTEGER"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "MEDIUMINT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store -8388608~8388607 KotlinType: Int"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "MEDIUMINT NUMBER(7) INT INTEGER INTEGER"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "INT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store -2147483648~2147483647 KotlinType: Int"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "INT NUMBER(10) INT INTEGER INTEGER"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "BIGINT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store -9223372036854775808~9223372036854775807 KotlinType: Long"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "BIGINT NUMBER(19) BIGINT BIGINT INTEGER"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "FLOAT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store -3.4028235E+38~3.4028235E+38 KotlinType: Float"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "FLOAT FLOAT FLOAT REAL REAL"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "DOUBLE"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store -1.7976931348623157E+308~1.7976931348623157E+308 KotlinType: Double"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "DOUBLE DOUBLE FLOAT DOUBLE REAL"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "DECIMAL"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store -10^38+1~10^38-1 KotlinType: BigDecimal"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "DECIMAL NUMBER DECIMAL DECIMAL NUMERIC"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "SERIAL"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store serial KotlinType: Int"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "INT NUMBER INT SERIAL INTEGER"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "NUMERIC"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store -10^38+1~10^38-1 KotlinType: BigDecimal"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "NUMERIC NUMBER DECIMAL DECIMAL NUMERIC"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "CHAR"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store fixed length string KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "CHAR CHAR CHAR CHAR TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "VARCHAR"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store variable length string KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "VARCHAR VARCHAR VARCHAR VARCHAR TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store text KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "TEXT CLOB TEXT TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "MEDIUMTEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store medium text KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "MEDIUMTEXT CLOB TEXT TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "LONGTEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store long text KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "TEXT CLOB TEXT TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "DATE"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store date KotlinType: LocalDate"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "DATE DATE DATE DATE TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "TIME"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store time KotlinType: LocalTime"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "TIME DATE TIME TIME TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "DATETIME"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store date and time KotlinType: LocalDateTime"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "DATETIME DATE DATETIME TIMESTAMP TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "TIMESTAMP"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store timestamp KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "TIMESTAMP DATE DATETIME TIMESTAMP TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Year"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store year KotlinType: Int"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "YEAR NUMBER INT INT INTEGER"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "BINARY"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store binary KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "BINARY BLOB BINARY BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "VARBINARY"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store variable length binary KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "VARBINARY BLOB VARBINARY BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "LONGVARBINARY"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store long binary KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "LONGBLOB BLOB IMAGE BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "BLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store blob KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "BLOB BLOB IMAGE BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "MEDIUMBLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store medium blob KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "MEDIUMBLOB BLOB IMAGE BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "LONGBLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store long blob KotlinType: ByteArray"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "LONGBLOB BLOB IMAGE BYTEA BLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "CLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store clob KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "CLOB CLOB TEXT TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "JSON"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store json KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "JSON JSON JSON JSON TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "ENUM"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store enum KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "ENUM ENUM ENUM TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "NVARCHAR"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store nvarchar KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "NVARCHAR NVARCHAR NVARCHAR TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "NCHAR"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store nchar KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "NCHAR NCHAR NCHAR TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "NCLOB"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store nclob KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "NCLOB NCLOB NTEXT TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "UUID"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store uuid KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "CHAR CHAR CHAR UUID TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "SET"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store set KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "SET SET SET TEXT TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "GEOMETRY"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store geometry KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "GEOMETRY GEOMETRY GEOMETRY GEOMETRY TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "POINT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store point KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "POINT POINT POINT POINT TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "LINESTRING"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "store linestring KotlinType: String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "Mysql Oracle SQL Server PostgreSQL SQLite"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kronos列类型"
    ],
    "pageType": "guide",
    "title": "Kronos列类型",
    "section": "Kronos列类型",
    "route": "/zh-CN/class-definition/kcolumn-type",
    "fragment": "kronos列类型",
    "content": "LINESTRING LINESTRING LINESTRING LINESTRING TEXT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "常见Kotlin类型与Kronos列类型的映射关系如下： 在未使用ColumnType注解的情况下，Kronos会根据Kotlin类型自动推测数据库列类型，您可以参考以下表格查看Kotlin数据类型与Kronos列类型(KColumnType)的映射关系。 Kronos列类型在不同数据库中的表现有所不同，具体请参考Kronos列类型。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "Kotlin类型 Kronos列类型"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlin.Boolean"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "TINYINT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlin.Byte"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "TINYINT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlin.Short"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "SMALLINT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlin.Int"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "INT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlin.Long"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "BIGINT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlin.Float"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "FLOAT"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlin.Double"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "DOUBLE"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "java.math.BigDecimal"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "NUMERIC"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlin.Char"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "CHAR"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlin.String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "VARCHAR"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlinx.datetime.LocalDate"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": ", "
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "java.util.Date"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": ", "
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "java.sql.Date"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": ", "
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "java.time.LocalDate"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "DATE"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlinx.datetime.LocalTime"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": ", "
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "java.time.LocalTime"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "TIME"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlinx.datetime.LocalDateTime"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": ", "
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "java.time.LocalDateTime"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "DATETIME"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "kotlin.ByteArray"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "BINARY"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "else"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "Kotlin列类型推断"
    ],
    "pageType": "guide",
    "title": "Kotlin列类型推断",
    "section": "Kotlin列类型推断",
    "route": "/zh-CN/class-definition/kotlin-type-to-kcolumn-type",
    "fragment": "kotlin列类型推断",
    "content": "VARCHAR"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "命名策略"
    ],
    "pageType": "guide",
    "title": "命名策略",
    "section": "命名策略",
    "route": "/zh-CN/class-definition/naming-strategy",
    "fragment": "命名策略",
    "content": "KronosNamingStrategy是一个接口，用于定义表名和列名的转换策略。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "命名策略"
    ],
    "pageType": "guide",
    "title": "命名策略",
    "section": "成员函数：",
    "route": "/zh-CN/class-definition/naming-strategy",
    "fragment": "成员函数",
    "content": "fun db2k(name: String): String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "命名策略"
    ],
    "pageType": "guide",
    "title": "命名策略",
    "section": "成员函数：",
    "route": "/zh-CN/class-definition/naming-strategy",
    "fragment": "成员函数",
    "content": "将数据库表/列名转为kotlin类名/属性名。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "命名策略"
    ],
    "pageType": "guide",
    "title": "命名策略",
    "section": "成员函数：",
    "route": "/zh-CN/class-definition/naming-strategy",
    "fragment": "成员函数",
    "content": "fun k2db(name: String): String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "命名策略"
    ],
    "pageType": "guide",
    "title": "命名策略",
    "section": "成员函数：",
    "route": "/zh-CN/class-definition/naming-strategy",
    "fragment": "成员函数",
    "content": "将kotlin类名/属性名转为数据库表/列名。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "序列化解析器"
    ],
    "pageType": "guide",
    "title": "序列化解析器",
    "section": "序列化解析器",
    "route": "/zh-CN/class-definition/serialize-resolver",
    "fragment": "序列化解析器",
    "content": "KronosSerializeResolver是Kronos定义的序列化解析器接口，用于字符串和Kotlin实体类之间的序列化和反序列化转换。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "序列化解析器"
    ],
    "pageType": "guide",
    "title": "序列化解析器",
    "section": "deserialize",
    "route": "/zh-CN/class-definition/serialize-resolver",
    "fragment": "deserialize",
    "content": "fun "
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "序列化解析器"
    ],
    "pageType": "guide",
    "title": "序列化解析器",
    "section": "deserialize",
    "route": "/zh-CN/class-definition/serialize-resolver",
    "fragment": "deserialize",
    "content": " deserialize(serializedStr: String, kClass: KClass<*>): T"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "序列化解析器"
    ],
    "pageType": "guide",
    "title": "序列化解析器",
    "section": "deserialize",
    "route": "/zh-CN/class-definition/serialize-resolver",
    "fragment": "deserialize",
    "content": "用于将字符串反序列化为指定的类型T"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "序列化解析器"
    ],
    "pageType": "guide",
    "title": "序列化解析器",
    "section": "deserializeObj",
    "route": "/zh-CN/class-definition/serialize-resolver",
    "fragment": "deserializeobj",
    "content": "fun deserializeObj(serializedStr: String, kClass: KClass<*>): Any 用于将字符串反序列化为指定的KClass"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "序列化解析器"
    ],
    "pageType": "guide",
    "title": "序列化解析器",
    "section": "serialize",
    "route": "/zh-CN/class-definition/serialize-resolver",
    "fragment": "serialize",
    "content": "fun serialize(obj: Any): String 用于将Kotlin对象序列化为String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "数据表类定义及配置项",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "数据表类定义及配置项",
    "content": "在Kronos中声明一个data class为数据表类非常简单，只需要让该类继承KPojo即可，以下是一个简单示例： 复杂数据类及使用数据库表操作时在不同数据库中建表语句示例： 我们通过一些注解和配置项来定义数据表的属性，如：主键、自增、唯一键、索引等。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "数据表类定义及配置项",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "数据表类定义及配置项",
    "content": "为什么使用注解而不是kotlin dsl？ 我们通过编译器插件读取注解信息并将信息保存在实体类定义中，使全部的表结构解析都发生在编译期而不是运行期，这样虽然失去了部分灵活性，但是可以避免运行时的性能损耗。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "全局表名策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "全局表名策略",
    "content": "参数名 类型 默认值"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "全局表名策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "全局表名策略",
    "content": "tableNamingStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "全局表名策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "全局表名策略",
    "content": "KronosNamingStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "全局表名策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "全局表名策略",
    "content": "NoneNamingStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "全局表名策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "全局表名策略",
    "content": "通过创建KronosNamingStrategy的实现类来自定义表名策略（详见：命名策略），然后在配置文件中指定该实现类。 我们默认提供了LineHumpNamingStrategy表名策略： 该策略将kotlin类名转换为下划线分隔的小写字符串，如：ADataClass -> a_data_class，将数据库表/列名转为驼峰命名，如：user_name -> userName。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "全局列名策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "全局列名策略",
    "content": "参数名 类型 默认值"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "全局列名策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "全局列名策略",
    "content": "fieldNamingStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "全局列名策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "全局列名策略",
    "content": "KronosNamingStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "全局列名策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "全局列名策略",
    "content": "NoneNamingStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "全局列名策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "全局列名策略",
    "content": "通过创建KronosNamingStrategy的实现类来自定义表名策略（详见：命名策略），然后在配置文件中指定该实现类。 我们默认提供了LineHumpNamingStrategy表名策略： 该策略将kotlin类名转换为下划线分隔的小写字符串，如：ADataClass -> a_data_class，将数据库表/列名转为驼峰命名，如：user_name -> userName。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "创建时间策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "创建时间策略",
    "content": "参数名 类型 默认值"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "创建时间策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "创建时间策略",
    "content": "createTimeStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "创建时间策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "创建时间策略",
    "content": "KronosCommonStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "创建时间策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "创建时间策略",
    "content": "KronosCommonStrategy(false, \"create_time\", \"createTime\")"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "创建时间策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "创建时间策略",
    "content": "通过创建KronosCommonStrategy的实现类来自定义创建时间策略（详见：通用策略），然后在配置文件中指定该实现类。 创建时间策略的全局默认关闭，需要手动开启。 全局设置创建时间策略后，仍可在KPojo类中通过@CreateTime注解覆盖全局设置。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "更新时间策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "更新时间策略",
    "content": "参数名 类型 默认值"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "更新时间策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "更新时间策略",
    "content": "updateTimeStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "更新时间策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "更新时间策略",
    "content": "KronosCommonStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "更新时间策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "更新时间策略",
    "content": "KronosCommonStrategy(false, \"update_time\", \"updateTime\")"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "更新时间策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "更新时间策略",
    "content": "通过创建KronosCommonStrategy的实现类来自定义更新时间策略（详见：通用策略），然后在配置文件中指定该实现类。 更新时间策略的全局默认关闭，需要手动开启。 全局设置逻更新时间策略后，仍可在KPojo类中通过@UpdateTime注解覆盖全局设置。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "逻辑删除策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "逻辑删除策略",
    "content": "参数名 类型 默认值"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "逻辑删除策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "逻辑删除策略",
    "content": "logicDeleteStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "逻辑删除策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "逻辑删除策略",
    "content": "KronosCommonStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "逻辑删除策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "逻辑删除策略",
    "content": "KronosCommonStrategy(false, \"deleted\")"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "逻辑删除策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "逻辑删除策略",
    "content": "通过创建KronosCommonStrategy的实现类来自定义逻辑删除策略（详见：通用策略），然后在配置文件中指定该实现类。 逻辑删除策略的全局默认关闭，需要手动开启。 全局设置逻辑删除策略后，仍可在KPojo类中通过@LogicDelete注解覆盖全局设置。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "乐观锁策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "乐观锁策略",
    "content": "参数名 类型 默认值"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "乐观锁策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "乐观锁策略",
    "content": "optimisticLockStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "乐观锁策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "乐观锁策略",
    "content": "KronosCommonStrategy"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "乐观锁策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "乐观锁策略",
    "content": "KronosCommonStrategy(false, \"version\")"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "乐观锁策略",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "乐观锁策略",
    "content": "通过创建KronosCommonStrategy的实现类来自定义乐观锁策略（详见：通用策略），然后在配置文件中指定该实现类。 也可通过[列乐观锁]对每一个实体对象单独配置 乐观锁策略的全局默认关闭，需要手动开启。 全局设置乐观锁策略后，仍可在KPojo类中通过@Version注解覆盖全局设置。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "默认日期/时间格式",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "默认日期时间格式",
    "content": "参数名 类型 默认值"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "默认日期/时间格式",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "默认日期时间格式",
    "content": "defaultDateFormat"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "默认日期/时间格式",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "默认日期时间格式",
    "content": "String"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "默认日期/时间格式",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "默认日期时间格式",
    "content": "yyyy-MM-dd HH:mm:ss"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "默认日期/时间格式",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "默认日期时间格式",
    "content": "Kronos默认使用yyyy-MM-dd HH:mm:ss格式化日期/时间，你可以通过以下方式修改默认格式："
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "默认时区",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "默认时区",
    "content": "参数名 类型 默认值"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "默认时区",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "默认时区",
    "content": "defaultTimeZone"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "默认时区",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "默认时区",
    "content": "kotlinx.datetime.TimeZone"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "默认时区",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "默认时区",
    "content": "currentSystemDefault()"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "默认时区",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "默认时区",
    "content": "Kronos默认使用当前系统时区，你可以通过以下方式修改默认时区："
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "序列化解析器",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "序列化解析器",
    "content": "参数名 类型 默认值"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "序列化解析器",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "序列化解析器",
    "content": "serializeResolver"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "序列化解析器",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "序列化解析器",
    "content": "KronosSerializeResolver"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "序列化解析器",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "序列化解析器",
    "content": "NoneSerializeResolver"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "序列化解析器",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "序列化解析器",
    "content": "通过创建KronosSerializeResolver的实现类来自定义序列化解析器（详见：序列化解析器），然后在配置文件中指定该实现类。 如可以通过引入GSON库来实现序列化解析器： 这里我们使用GSON库来实现序列化解析器，你可以使用任何库如Kotlinx.serialization、Jackson、Moshi、FastJson等。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "表名",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "表名",
    "content": "@Table(name: String) 用于指定数据表的表名，如果不指定则使用默认的表名策略。 参数： name string：表名"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "表索引",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "表索引",
    "content": "@TableIndex(name: String, columns: Array"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "表索引",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "表索引",
    "content": ", type: String, method: String)"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "表索引",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "表索引",
    "content": "用于指定数据表的索引，如果不指定则不创建索引。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "表索引",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "表索引",
    "content": "仅在使用tables.create"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "表索引",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "表索引",
    "content": "参数： name string：索引名columns Array"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "表索引",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "表索引",
    "content": "：索引列名type String：索引类型（可选）method String：索引方法（可选）"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "表创建时间",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "表创建时间",
    "content": "@CreateTime(enabled: Boolean) 用于指定数据表是否开启创建时间策略，如果不指定则使用全局设置。 参数： enabled Boolean：是否开启"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "表更新时间",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "表更新时间",
    "content": "@UpdateTime(enabled: Boolean) 用于指定数据表是否开启更新时间策略，如果不指定则使用全局设置。 参数： enabled Boolean：是否开启"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "表逻辑删除",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "表逻辑删除",
    "content": "@LogicDelete(enabled: Boolean) 用于指定数据表是否开启逻辑删除策略，如果不指定则使用全局设置。 参数： enabled Boolean：是否开启"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列名设置",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列名设置",
    "content": "@Column(name: String) 用于指定数据表的列名，如果不指定则使用默认的列名策略。 参数： name String：列名"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列日期格式化",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列日期格式化",
    "content": "@DateTimeFormat(pattern: String) 用于指定数据表的日期/时间格式，如果不指定则使用默认的日期/时间格式。 参数： pattern String：日期/时间格式"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列反序列化设置",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列反序列化设置",
    "content": "@ColumnDeserialize 用于声明该列是否需要反序列化，如果不指定则默认不反序列化，若启用反序列化，将调用Kronos.serializeResolver.deserialize方法将该列的值反序列化为指定类型。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列关联设置",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列关联设置",
    "content": "@Reference(reference: String[], target: String[], onDelete: CascadeDeleteAction, defaultValue: String, mapperBy: String) 此注解用于声明列关联，包括关联查询、关联插入、关联更新、关联删除等。支持一对一、一对多、多对一、多对多关联。 kronos将关联列视为自定义属性，不会将其识别为数据库字段。 kronos的关联功能无需定义外键，只需在实体类中定义关联关系即可实现关联查询、关联插入、关联更新、关联删除等操作。 参数： referenceFields Array"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列关联设置",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列关联设置",
    "content": "：关联属性名targetFields Array"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列关联设置",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列关联设置",
    "content": "：关联目标表属性名onDelete CascadeDeleteAction：关联删除策略（可选，默认为无操作）defaultValue Array"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列关联设置",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列关联设置",
    "content": "：指定级联删除方式为\"SET DEFAULT\"时设置的默认值（可选）mapperBy Array"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列关联设置",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列关联设置",
    "content": "：用于指定本关联关系的维护端（为空时表示维护端为本实体，若两端都有该注解时不能为空）usage Array"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列关联设置",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列关联设置",
    "content": ": 用于声明本实体需要用到的关联操作（可选，默认为[Insert, Update, Delete, Upsert, Select]）"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列主键设置",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列主键设置",
    "content": "@PrimaryKey(identity: Boolean) 此注解用于声明列为主键。 参数： identity Boolean：是否自增"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列类型及长度",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列类型及长度",
    "content": "@ColumnType(type: String, length: Int) 对于不同的数据库类型，kronos会根据kotlin类型自动转换类型，您可以参考Kotlin列类型推断查看Kotlin数据类型在各个数据库中的映射关系。 您可以通过此注解声明列类型及长度，如果不指定则使用默认的类型及长度，全部类型信息请参考：Kronos列类型 参数： type String：类型length Int：长度"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列非空约束",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列非空约束",
    "content": "@NotNull 此注解用于声明列为非空，如果不指定则使用默认的非空约束"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列创建时间",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列创建时间",
    "content": "@CreateTime 此注解用于声明列为创建时间字段，如果不指定则使用默认的创建时间策略。 参数： enabled Boolean：是否启用"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列更新时间",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列更新时间",
    "content": "@UpdateTime 此注解用于声明列为更新时间字段，如果不指定则使用默认的更新时间策略。 参数： enabled Boolean：是否启用"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列逻辑删除",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列逻辑删除",
    "content": "@LogicDelete 此注解用于声明列为逻辑删除字段，如果不指定则使用默认的逻辑删除策略。 参数： enabled Boolean：是否启用"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "数据表类定义及配置项"
    ],
    "pageType": "guide",
    "title": "数据表类定义及配置项",
    "section": "列乐观锁",
    "route": "/zh-CN/class-definition/table-class-definition",
    "fragment": "列乐观锁",
    "content": "@LogicDelete 此注解用于声明列为乐观锁字段，如果不指定则使用默认的乐观锁策略。 参数： enabled Boolean：是否启用"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连接到数据库"
    ],
    "pageType": "guide",
    "title": "连接到数据库",
    "section": "连接到数据库",
    "route": "/zh-CN/database/connect-to-db",
    "fragment": "连接到数据库",
    "content": "Kronos访问数据库通过KronosDataSourceWrapper实现。 KronosDataSourceWrapper是一个接口，是对数据库操作的封装，它不关心具体的数据库连接细节，与平台无关，只关心数据库操作的逻辑： dbType：数据库类型url：数据库连接地址username：数据库用户名query：执行查询List"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连接到数据库"
    ],
    "pageType": "guide",
    "title": "连接到数据库",
    "section": "连接到数据库",
    "route": "/zh-CN/database/connect-to-db",
    "fragment": "连接到数据库",
    "content": ">：返回查询结果List"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连接到数据库"
    ],
    "pageType": "guide",
    "title": "连接到数据库",
    "section": "连接到数据库",
    "route": "/zh-CN/database/connect-to-db",
    "fragment": "连接到数据库",
    "content": "：返回查询结果的第一列Map"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连接到数据库"
    ],
    "pageType": "guide",
    "title": "连接到数据库",
    "section": "连接到数据库",
    "route": "/zh-CN/database/connect-to-db",
    "fragment": "连接到数据库",
    "content": "：返回查询结果的第一行T：返回查询结果的第一行的第一列execute：执行更新batch：批量执行更新transaction：事务"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连接到数据库"
    ],
    "pageType": "guide",
    "title": "连接到数据库",
    "section": "连接到数据库",
    "route": "/zh-CN/database/connect-to-db",
    "fragment": "连接到数据库",
    "content": "KronosDataSourceWrapper以扩展的形式在core中引入，这使得支持多平台、新数据库扩展和第三方框架集成成为可能。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连接到数据库"
    ],
    "pageType": "guide",
    "title": "连接到数据库",
    "section": "使用示例",
    "route": "/zh-CN/database/connect-to-db",
    "fragment": "使用示例",
    "content": "官方提供了jvm平台的基于JDBC的数据库连接插件，可以通过以下方式引入： 除此之外，可以通过如kronos-spring-data-wrapper、kronos-jdbi-wrapper、kronos-mybatis-wrapper等插件实现数据库连接，与Spring Data、JDBI、MyBatis等框架集成。 以下是对于kronos-jvm-driver-wrapper的使用示例"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连接到数据库"
    ],
    "pageType": "guide",
    "title": "连接到数据库",
    "section": "使用示例",
    "route": "/zh-CN/database/connect-to-db",
    "fragment": "使用示例",
    "content": "BasicDataSource是Apache Commons DBCP的一个简单的数据源实现，您可以更换为其他数据源实现。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "根据KPojo对象值生成条件语句并删除记录",
    "route": "/zh-CN/database/delete-records",
    "fragment": "根据kpojo对象值生成条件语句并删除记录",
    "content": "在Kronos中，我们可以使用KPojo.delete().execute()方法用于删除数据库中的记录 当未使用by或where方法时，Kronos会根据KPojo对象的值生成删除条件语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "根据KPojo对象值生成条件语句并删除记录",
    "route": "/zh-CN/database/delete-records",
    "fragment": "根据kpojo对象值生成条件语句并删除记录",
    "content": "null值不会被包含在删除条件中，即null值不会被用于生成删除条件语句，若需要删除null值，请使用where方法设置删除条件。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "使用",
    "route": "/zh-CN/database/delete-records",
    "fragment": "使用by设置删除条件",
    "content": "by"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "设置删除条件",
    "route": "/zh-CN/database/delete-records",
    "fragment": "使用by设置删除条件",
    "content": "在Kronos中，我们可以使用by方法设置删除条件，此时Kronos会根据by方法设置的字段生成删除条件语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "使用",
    "route": "/zh-CN/database/delete-records",
    "fragment": "使用where设置删除条件",
    "content": "where"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "设置删除条件",
    "route": "/zh-CN/database/delete-records",
    "fragment": "使用where设置删除条件",
    "content": "在Kronos中，我们可以使用where方法设置删除条件，此时Kronos会根据where方法设置的条件生成删除条件语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "逻辑删除",
    "route": "/zh-CN/database/delete-records",
    "fragment": "逻辑删除",
    "content": "在Kronos中，我们可以使用logic方法设置逻辑删除，此时Kronos会生成逻辑删除的SQL语句。 逻辑删除的开启与字段设置设置请参考 逻辑删除策略及表逻辑删除"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "影响行数",
    "route": "/zh-CN/database/delete-records",
    "fragment": "影响行数",
    "content": "execute方法返回的KronosOperationResult对象中包含了影响行数。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "批量删除记录",
    "route": "/zh-CN/database/delete-records",
    "fragment": "批量删除记录",
    "content": "在Kronos中，我们可以使用Iterable"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "批量删除记录",
    "route": "/zh-CN/database/delete-records",
    "fragment": "批量删除记录",
    "content": ".delete().execute()或Array"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "批量删除记录",
    "route": "/zh-CN/database/delete-records",
    "fragment": "批量删除记录",
    "content": ".delete().execute()方法删除数据库中的记录。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "删除记录"
    ],
    "pageType": "guide",
    "title": "删除记录",
    "section": "指定使用的数据源",
    "route": "/zh-CN/database/delete-records",
    "fragment": "指定使用的数据源",
    "content": "在Kronos中，我们可以将KronosDataSourceWrapper传入execute方法，以实现自定义的数据库连接。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "BTREE",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "btree",
    "content": "Mysql.KIndexMethod.BTREE 二叉树索引，最常见的索引类型，无需指定，MySQL默认使用该索引。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "HASH",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "hash",
    "content": "Mysql.KIndexMethod.HASH 哈希索引，只有Memory引擎支持，不支持范围查询。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "NORMAL",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "normal",
    "content": "Mysql.KIndexType.NORMAL 普通索引，无需指定，MySQL默认使用该索引。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "UNIQUE",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "unique",
    "content": "Mysql.KIndexType.UNIQUE 唯一索引，用于保证数据唯一性。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "FULLTEXT",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "fulltext",
    "content": "Mysql.KIndexType.FULLTEXT 全文索引，只有MyISAM引擎支持，用于全文搜索。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "SPATIAL",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "spatial",
    "content": "Mysql.KIndexType.SPATIAL 空间索引，用于空间数据类型，支持范围查询。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "BTREE",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "btree-1",
    "content": "PostgreSQL.KIndexMethod.BTREE 二叉树索引，无需指定，PostgreSQL默认使用该索引。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "HASH",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "hash-1",
    "content": "PostgreSQL.KIndexMethod.HASH 哈希索引，用于等值查询，不支持范围查询。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "GIST",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "gist",
    "content": "PostgreSQL.KIndexMethod.GIST 通用索引，支持范围查询，支持空间索引。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "SPGIST",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "spgist",
    "content": "PostgreSQL.KIndexMethod.SPGIST 空间索引，支持范围查询。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "GIN",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "gin",
    "content": "PostgreSQL.KIndexMethod.GIN 通用倒排索引，用于全文搜索。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "BRIN",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "brin",
    "content": "PostgreSQL.KIndexMethod.BRIN 区间索引，用于大表。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "UNIQUE",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "unique-1",
    "content": "PostgreSQL.KIndexType.UNIQUE 唯一索引，用于保证数据唯一性。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "NORMAL",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "normal-1",
    "content": "Oracle.KIndexType.NORMAL 普通索引，无需指定，Oracle默认使用该索引。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "BITMAP",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "bitmap",
    "content": "Oracle.KIndexType.BITMAP 位图索引，用于高并发查询，适用于低基数列。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "UNIQUE",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "unique-2",
    "content": "Oracle.KIndexType.UNIQUE 唯一索引，用于保证数据唯一性。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "UNIQUE",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "unique-3",
    "content": "SqlServer.KIndexMethod.UNIQUE 唯一索引，用于保证数据唯一性。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "CLUSTERED",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "clustered",
    "content": "SqlServer.KIndexType.CLUSTERED 聚集索引，表中数据的物理顺序与索引的逻辑顺序一致。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "NONCLUSTERED",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "nonclustered",
    "content": "SqlServer.KIndexType.NONCLUSTERED 非聚集索引，表中数据的物理顺序与索引的逻辑顺序不一致。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "XML",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "xml",
    "content": "SqlServer.KIndexType.XML XML索引，用于XML数据类型。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "SPATIAL",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "spatial-1",
    "content": "SqlServer.KIndexType.SPATIAL 空间索引，用于空间数据类型。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "UNIQUE",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "unique-4",
    "content": "SQLite.KIndexMethod.UNIQUE 唯一索引，用于保证数据唯一性。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "NOCASE",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "nocase",
    "content": "SQLite.KIndexType.NOCASE 忽略大小写。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "RTRIM",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "rtrim",
    "content": "SQLite.KIndexType.RTRIM 忽略尾部空格。"
  },
  {
    "breadcrumbs": [
      "表对象定义",
      "索引方法和索引类型"
    ],
    "pageType": "guide",
    "title": "索引方法和索引类型",
    "section": "BINARY",
    "route": "/zh-CN/class-definition/table-index",
    "fragment": "binary",
    "content": "SQLite.KIndexType.BINARY 二进制比较。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "数据库操作"
    ],
    "pageType": "guide",
    "title": "数据库操作",
    "section": "数据库操作",
    "route": "/zh-CN/database/database-operation",
    "fragment": "数据库操作",
    "content": "相比于kotoframework, Kronos是一个Code-First的ORM框架，它增加了对于数据库表结构的操作。 相关功能可可以通过Kronos.dataSource(() -> KronosDataSourceWrapper)或某个具体的数据源对象(KronosDataSourceWrapper)来调用。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "数据库操作"
    ],
    "pageType": "guide",
    "title": "数据库操作",
    "section": "1. 表是否存在",
    "route": "/zh-CN/database/database-operation",
    "fragment": "1-表是否存在",
    "content": "通过exists方法，可以判断表是否存在，返回true表示存在，false表示不存在。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "数据库操作"
    ],
    "pageType": "guide",
    "title": "数据库操作",
    "section": "2. 创建表",
    "route": "/zh-CN/database/database-operation",
    "fragment": "2-创建表",
    "content": "通过createTable方法，可以创建表。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "数据库操作"
    ],
    "pageType": "guide",
    "title": "数据库操作",
    "section": "3. 删除表",
    "route": "/zh-CN/database/database-operation",
    "fragment": "3-删除表",
    "content": "通过dropTable方法，可以删除表。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "数据库操作"
    ],
    "pageType": "guide",
    "title": "数据库操作",
    "section": "4. 表结构同步和变更",
    "route": "/zh-CN/database/database-operation",
    "fragment": "4-表结构同步和变更",
    "content": "通过syncSchema方法，可以根据实体类的定义，自动同步表结构。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "数据库操作"
    ],
    "pageType": "guide",
    "title": "数据库操作",
    "section": "5. 动态建表",
    "route": "/zh-CN/database/database-operation",
    "fragment": "5-动态建表",
    "content": "部分情况下会存在动态建表的需求，此时可以通过getTableCreateSqlList方法动态获取建表语句并执行。 getTableCreateSqlList接收的参数包括： dbType：DBType 数据库类型tableName：String 表名fields：List"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "数据库操作"
    ],
    "pageType": "guide",
    "title": "数据库操作",
    "section": "5. 动态建表",
    "route": "/zh-CN/database/database-operation",
    "fragment": "5-动态建表",
    "content": " 字段列表indexes：List"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "数据库操作"
    ],
    "pageType": "guide",
    "title": "数据库操作",
    "section": "5. 动态建表",
    "route": "/zh-CN/database/database-operation",
    "fragment": "5-动态建表",
    "content": " 索引列表"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "数据库操作"
    ],
    "pageType": "guide",
    "title": "数据库操作",
    "section": "5. 动态建表",
    "route": "/zh-CN/database/database-operation",
    "fragment": "5-动态建表",
    "content": "若需要对同一个实体对象连续执行多个数据库操作，建议不要使用泛型，以避免多次创建KPojo对象，产生不必要的开销。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "插入记录"
    ],
    "pageType": "guide",
    "title": "插入记录",
    "section": "插入单条记录",
    "route": "/zh-CN/database/insert-records",
    "fragment": "插入单条记录",
    "content": "在Kronos中，我们可以使用KPojo.insert().execute()方法向数据库中插入一条记录。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "插入记录"
    ],
    "pageType": "guide",
    "title": "插入记录",
    "section": "自增主键和影响行数",
    "route": "/zh-CN/database/insert-records",
    "fragment": "自增主键和影响行数",
    "content": "在Kronos中，我们可以使用KPojo.insert().execute()方法向数据库中插入一条记录，当主键为自增时，Kronos会自动获取自增主键的值。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "插入记录"
    ],
    "pageType": "guide",
    "title": "插入记录",
    "section": "批量插入记录",
    "route": "/zh-CN/database/insert-records",
    "fragment": "批量插入记录",
    "content": "在Kronos中，我们可以使用Iterable"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "插入记录"
    ],
    "pageType": "guide",
    "title": "插入记录",
    "section": "批量插入记录",
    "route": "/zh-CN/database/insert-records",
    "fragment": "批量插入记录",
    "content": ".insert().execute()或Array"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "插入记录"
    ],
    "pageType": "guide",
    "title": "插入记录",
    "section": "批量插入记录",
    "route": "/zh-CN/database/insert-records",
    "fragment": "批量插入记录",
    "content": ".insert().execute()方法向数据库中批量插入记录。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "插入记录"
    ],
    "pageType": "guide",
    "title": "插入记录",
    "section": "指定使用的数据源",
    "route": "/zh-CN/database/insert-records",
    "fragment": "指定使用的数据源",
    "content": "在Kronos中，我们可以将KronosDataSourceWrapper传入execute方法，以实现自定义的数据库连接。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "Sql语句执行（命名参数）",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "sql语句执行命名参数",
    "content": "Kronos提供了一个基础的SQL查询构建器，它允许您使用命名参数来构建SQL查询。这个构建器是一个简单的构建器，它允许您构建一个SQL查询，然后使用命名参数来填充查询中的参数。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "使用",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用query查询map列表",
    "content": "query"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询Map列表",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用query查询map列表",
    "content": "KronosDataSourceWrapper.query() sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询Map列表",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用query查询map列表",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "使用",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "queryList"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询List",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "queryList方法用于执行查询并返回指定类型列表，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryList"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询List",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询List",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryList"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询List",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询List",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": "KronosDataSourceWrapper.queryList() T 查询结果类型sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询List",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querylist查询list",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "使用",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querymap查询map",
    "content": "queryMap"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询Map",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querymap查询map",
    "content": "若查询结果只有一行，可以使用queryMap方法，返回一个Map"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询Map",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querymap查询map",
    "content": "对象。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询Map",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querymap查询map",
    "content": "若查询结果为空，返回null。 KronosDataSourceWrapper.queryMap() sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询Map",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用querymap查询map",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "使用",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "queryOne"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "queryOne方法用于执行查询并返回单条记录，当查询结果为空时，抛出异常，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryOne"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryOne"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": "KronosDataSourceWrapper.queryOne() T 查询结果类型sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryone查询单条记录",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "使用",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录(可空)",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "queryOneOrNull方法用于执行查询并返回单条记录，当查询结果为空时，返回null，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录(可空)",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录(可空)",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录(可空)",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录(可空)",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "KronosDataSourceWrapper.queryOneOrNull() T 查询结果类型sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "查询单条记录(可空)",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "使用",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用execute执行sql",
    "content": "execute"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "执行SQL",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用execute执行sql",
    "content": "execute方法用于执行SQL语句，返回受影响的行数。 KronosDataSourceWrapper.execute() sql String SQL查询语句params Map"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "执行SQL",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用execute执行sql",
    "content": " 命名参数(可选)"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "使用",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用batchexecute批量执行sql",
    "content": "batchExecute"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "批量执行SQL",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用batchexecute批量执行sql",
    "content": "batchExecute方法用于批量执行SQL语句，返回受影响的行数。 KronosDataSourceWrapper.batchExecute() sql String SQL查询语句params Array"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Sql语句执行（命名参数）"
    ],
    "pageType": "guide",
    "title": "Sql语句执行（命名参数）",
    "section": "批量执行SQL",
    "route": "/zh-CN/database/named-arguments-base-sql",
    "fragment": "使用batchexecute批量执行sql",
    "content": "> 命名参数列表"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "无值策略"
    ],
    "pageType": "guide",
    "title": "无值策略",
    "section": "无值策略",
    "route": "/zh-CN/database/no-value-strategy",
    "fragment": "无值策略",
    "content": "什么是无值策略"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "无值策略"
    ],
    "pageType": "guide",
    "title": "无值策略",
    "section": "无值策略",
    "route": "/zh-CN/database/no-value-strategy",
    "fragment": "无值策略",
    "content": "无值策略是查询条件语句Criteria中的一种策略，当条件语句可接收右值时，如果右值为null，那么将会使用无值策略。 2.哪些条件语句支持无值策略 目前支持无值策略的条件语句有：==、!=、>、<、>=、<=、in、contains、like、between、notBetween、like、notLike、matchLeft、matchRight、matchBoth、regexp、asSql等。 3.如何使用无值策略 4.无值策略的类型 目前支持的无值策略有： Ignore：忽略该条件语句False：条件语句为falseTrue：条件语句为trueJudgeNull：转换为is null或is not nullSmart：根据当前语境自动判断 5.默认无值策略smart的判断逻辑 当条件语句可接收右值时，如果右值为null，那么将会使用无值策略。 当条件类型为相等判断时，将其修改为对应的null判断，如==修改为is null，!=修改为is not null。 当条件为like、in、between或数值判断时，直接认定条件为假。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "查询多表关联数据",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "查询多表关联数据",
    "content": "在Kronos中，我们可以使用KPojo.join(KPojo1, KPojo2, ...)方法来查询多表关联数据。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定连接条件及连接方式",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "指定连接条件及连接方式",
    "content": "在Kronos中，我们默认使用left join连接多表，如果不需要指定连接方式，可以使用on方法指定连接条件。 可以通过leftJoin、rightJoin、innerJoin、crossJoin、fullJoin等函数同时指定连接方式和连接条件。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定连接数据表的数据库（跨库连表查询）",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "指定连接数据表的数据库跨库连表查询",
    "content": "在Kronos中，我们可以使用db方法指定查询字段。 将一张或多张表与其所处的数据库名组合通过一个或多个Pair类作为参数传入该方法进行跨库连表查询"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用select指定查询字段",
    "content": "select"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定查询字段",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用select指定查询字段",
    "content": "在Kronos中，我们可以使用select方法指定查询字段，多个字段之间使用+连接。 可以使用as为字段指定别名，如select { user.id + user.name.`as`(\"userName\") + userInfo.age }。 如需要查询某张表的所有字段，可以使用select { user }、select { user + userInfo + userTeam.teamId }。 不指定查询字段时，默认查询所有字段，我们会对不同表相同字段进行重新命名，以避免字段冲突。 可以使用字符串作为自定义查询字段，如select { \"count(`user.id`)\".as(\"count\") }。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用by指定查询字段",
    "content": "by"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定查询字段",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用by指定查询字段",
    "content": "在Kronos中，我们可以使用by方法指定查询字段，多个字段之间使用+连接。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用where指定查询条件",
    "content": "where"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定查询条件",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用where指定查询条件",
    "content": "在Kronos中，我们可以使用where方法指定查询条件。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用groupby指定分组字段",
    "content": "groupBy"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定分组字段",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用groupby指定分组字段",
    "content": "在Kronos中，我们可以使用groupBy方法指定分组字段。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用orderby指定排序字段",
    "content": "orderBy"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定排序字段",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用orderby指定排序字段",
    "content": "在Kronos中，我们可以使用orderBy方法指定排序字段。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用having指定分组条件",
    "content": "having"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定分组条件",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用having指定分组条件",
    "content": "在Kronos中，我们可以使用having方法指定分组条件。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用limit指定查询数量",
    "content": "limit"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定查询数量",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用limit指定查询数量",
    "content": "在Kronos中，我们可以使用limit方法指定查询数量。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用distinct指定查询去重",
    "content": "distinct"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定查询去重",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用distinct指定查询去重",
    "content": "在Kronos中，我们可以使用distinct方法指定查询去重。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用page指定分页查询",
    "content": "page"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定分页查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用page指定分页查询",
    "content": "page方法用于设置分页查询，请注意，page方法的参数从1开始。 在不同的数据库中，分页查询的语法有所不同，Kronos会根据不同的数据库生成相应的分页查询语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "指定分页查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用page指定分页查询",
    "content": "使用page方法后，查询的结果默认不会包含总记录数，若需要查询总记录数，请使用withTotal方法。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用query执行查询",
    "content": "query"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用query执行查询",
    "content": "在Kronos中，我们可以使用query方法执行查询，返回List"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用query执行查询",
    "content": ">类型的结果。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用querylist执行查询",
    "content": "queryList"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用querylist执行查询",
    "content": "在Kronos中，我们可以使用queryList方法执行查询，返回List"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用querylist执行查询",
    "content": "类型的结果。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryone执行查询",
    "content": "queryOne"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryone执行查询",
    "content": "queryOne方法用于执行查询并返回单条记录，当查询结果为空时，抛出异常，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryOne"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryone执行查询",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryone执行查询",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryOne"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryone执行查询",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryone执行查询",
    "content": "当未设置泛型参数时，Kronos会根据查询结果自动转换为主表的类型。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryoneornull执行查询",
    "content": "queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryoneornull执行查询",
    "content": "和queryOne方法类似，queryOneOrNull方法用于执行查询并返回单条记录，当查询结果为空时，返回null，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryoneornull执行查询",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryoneornull执行查询",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryoneornull执行查询",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用queryoneornull执行查询",
    "content": "当未设置泛型参数时，Kronos会根据查询结果自动转换为查询的KPojo类型。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用querymap执行查询",
    "content": "queryMap"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用querymap执行查询",
    "content": "在Kronos中，我们可以使用queryMap方法执行查询，返回Map"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "执行查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用querymap执行查询",
    "content": "类型的结果。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用withtotal查询带有总记录数的分页查询",
    "content": "withTotal"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "查询带有总记录数的分页查询",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用withtotal查询带有总记录数的分页查询",
    "content": "withTotal方法用于查询带有总记录数的分页查询，此时Kronos会在查询结果中包含总记录数。 withTotal方法返回一个PageClause对象，您可以通过query、queryList等方法获取查询结果。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "连表查询"
    ],
    "pageType": "guide",
    "title": "连表查询",
    "section": "使用指定的数据源",
    "route": "/zh-CN/database/select-from-join",
    "fragment": "使用指定的数据源",
    "content": "在Kronos中，我们可以使用指定的数据源查询数据库中的记录。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询所有记录",
    "route": "/zh-CN/database/select-records",
    "fragment": "查询所有记录",
    "content": "在Kronos中，我们可以使用KPojo.select()方法用于查询数据库中的记录。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用select指定查询字段",
    "content": "select"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "指定查询字段",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用select指定查询字段",
    "content": "select方法用于指定查询字段，此时Kronos会根据select方法设置的字段生成查询字段语句。 可以传入字符串作为查询字段，使用+连接多个字段，as方法用于设置字段别名。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "根据KPojo对象值生成条件语句并查询记录",
    "route": "/zh-CN/database/select-records",
    "fragment": "根据kpojo对象值生成条件语句并查询记录",
    "content": "当未使用by或where方法时，Kronos会根据KPojo对象的值生成查询条件语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "根据KPojo对象值生成条件语句并查询记录",
    "route": "/zh-CN/database/select-records",
    "fragment": "根据kpojo对象值生成条件语句并查询记录",
    "content": "null值不会被包含在查询条件中，即null值不会被用于生成查询条件语句，若需要查询null值，请使用where方法设置查询条件。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用by设置查询条件",
    "content": "by"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "设置查询条件",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用by设置查询条件",
    "content": "by方法用于设置查询条件，此时Kronos会根据by方法设置的字段生成查询条件语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用where设置查询条件",
    "content": "where"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "设置查询条件",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用where设置查询条件",
    "content": "where方法用于设置查询条件，此时Kronos会根据where方法设置的字段生成查询条件语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用patch为自定义查询条件添加参数",
    "content": "patch"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "为自定义查询条件添加参数",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用patch为自定义查询条件添加参数",
    "content": "当where条件内包含自定义Sql如：where { \"id = :id\".asSql() }时，可以使用patch方法为自定义查询条件添加参数。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用orderby设置排序条件",
    "content": "orderBy"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "设置排序条件",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用orderby设置排序条件",
    "content": "orderBy方法用于设置排序条件，此时Kronos会根据orderBy方法设置的字段生成排序条件语句。 使用asc方法设置升序排序，使用desc方法设置降序排序。 当不设置排序方法时，默认为升序排序，如：orderBy { it.id }。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用groupby和having设置分组和聚合条件",
    "content": "groupBy"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "和",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用groupby和having设置分组和聚合条件",
    "content": "having"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "设置分组和聚合条件",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用groupby和having设置分组和聚合条件",
    "content": "groupBy方法用于设置分组条件，having方法用于设置聚合条件。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用limit设置查询记录数",
    "content": "limit"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "设置查询记录数",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用limit设置查询记录数",
    "content": "limit方法用于设置查询记录数，此时Kronos会根据limit方法设置的记录数生成查询条件语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用lock设置查询时行锁",
    "content": "lock"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "设置查询时行锁",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用lock设置查询时行锁",
    "content": "lock方法用于设置查询时行锁，此时Kronos会根据lock方法设置的锁类型进行锁的添加。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用page设置分页查询",
    "content": "page"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "设置分页查询",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用page设置分页查询",
    "content": "page方法用于设置分页查询，请注意，page方法的参数从1开始。 在不同的数据库中，分页查询的语法有所不同，Kronos会根据不同的数据库生成相应的分页查询语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "设置分页查询",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用page设置分页查询",
    "content": "使用page方法后，查询的结果默认不会包含总记录数，若需要查询总记录数，请使用withTotal方法。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用db设置查询数据库跨库查询",
    "content": "db"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "设置查询数据库（跨库查询）",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用db设置查询数据库跨库查询",
    "content": "db方法用于跨库查询，此时Kronos会根据db方法的参数设置查询的数据库。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用single方法查询单条记录",
    "content": "single"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "方法查询单条记录",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用single方法查询单条记录",
    "content": "single方法实际上是limit(1)的简写，用于查询单条记录。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用query方法查询map列表",
    "content": "query"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "方法查询Map列表",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用query方法查询map列表",
    "content": "query方法用于执行查询并返回Map列表。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "queryList"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询指定类型列表",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "queryList方法用于执行查询并返回指定类型列表，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryList"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询指定类型列表",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询指定类型列表",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryList"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询指定类型列表",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询指定类型列表",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "当未设置泛型参数时，Kronos会根据查询结果自动转换为查询的KPojo类型。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询指定类型列表",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用querylist查询指定类型列表",
    "content": "queryList使用KCP实现Map转换为KPojo，详见：KPojo与Map互相转换"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用querymap查询map",
    "content": "queryMap"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询Map",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用querymap查询map",
    "content": "queryMap方法用于执行查询并返回Map，当查询结果为空时，返回null。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "queryOne"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "queryOne方法用于执行查询并返回单条记录，当查询结果为空时，抛出异常，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryOne"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryOne"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "当未设置泛型参数时，Kronos会根据查询结果自动转换为查询的KPojo类型。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryone查询单条记录",
    "content": "queryOne使用KCP实现Map转换为KPojo，详见：KPojo与Map互相转换"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录（可空）",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "和queryOne方法类似，queryOneOrNull方法用于执行查询并返回单条记录，当查询结果为空时，返回null，可以接收泛型参数。 当查询单列时，可以直接将泛型参数设置为列的类型，例如：queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录（可空）",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录（可空）",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "查询多列时，可以将泛型参数设置为KPojo的子类，例如：queryOneOrNull"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录（可空）",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "()。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录（可空）",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "当未设置泛型参数时，Kronos会根据查询结果自动转换为查询的KPojo类型。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询单条记录（可空）",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用queryoneornull查询单条记录可空",
    "content": "queryOneOrNull使用KCP实现Map转换为KPojo，详见：KPojo与Map互相转换"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用withtotal查询带有总记录数的分页查询",
    "content": "withTotal"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "查询带有总记录数的分页查询",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用withtotal查询带有总记录数的分页查询",
    "content": "withTotal方法用于查询带有总记录数的分页查询，此时Kronos会在查询结果中包含总记录数。 withTotal方法返回一个PageClause对象，您可以通过query、queryList等方法获取查询结果。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "查询记录"
    ],
    "pageType": "guide",
    "title": "查询记录",
    "section": "使用指定的数据源",
    "route": "/zh-CN/database/select-records",
    "fragment": "使用指定的数据源",
    "content": "在Kronos中，我们可以使用指定的数据源查询数据库中的记录。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "更新插入",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "更新插入",
    "content": "在Kronos中，我们可以使用KPojo.upsert().execute()方法用于向数据库中插入或更新记录。 由于各个数据库的实现不同，因此在Kronos中，我们对upsert操作进行了统一的封装，以实现跨数据库的兼容性。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "使用",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "使用on设置唯一性约束字段",
    "content": "on"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "设置唯一性约束字段",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "使用on设置唯一性约束字段",
    "content": "on方法用于唯一性设置约束字段，可以是单个字段，也可以是多个字段。当记录存在时，Kronos会根据on方法设置的字段生成更新条件语句，否则生成插入语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "使用",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "使用upsert设置更新字段",
    "content": "upsert"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "设置更新字段",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "使用upsert设置更新字段",
    "content": "用于指定当记录存在时需要更新的字段。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "使用",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "使用upsertexcept设置不更新的字段",
    "content": "upsertExcept"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "设置不更新的字段",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "使用upsertexcept设置不更新的字段",
    "content": "用于指定当记录存在时不需要更新的字段。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "使用",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "使用onconflict设置处理策略为冲突时更新",
    "content": "onConflict"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "设置处理策略为冲突时更新",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "使用onconflict设置处理策略为冲突时更新",
    "content": "当使用upsert方法时，我们可以使用onConflict方法设置处理策略为冲突时更新，即当记录存在时，更新记录。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "使用",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "使用lock设置查询时行锁",
    "content": "lock"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "设置查询时行锁",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "使用lock设置查询时行锁",
    "content": "limit方法用于设置查询时行锁，此时Kronos会根据lock方法设置的锁类型进行锁的添加。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "影响行数",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "影响行数",
    "content": "在Kronos中，我们可以使用upsert方法的execute方法获取影响行数。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "批量更新或插入记录",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "批量更新或插入记录",
    "content": "在Kronos中，我们可以使用Iterable"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "批量更新或插入记录",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "批量更新或插入记录",
    "content": ".upsert().execute()或Array"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "批量更新或插入记录",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "批量更新或插入记录",
    "content": ".upsert().execute()方法批量更新或插入记录。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新插入"
    ],
    "pageType": "guide",
    "title": "更新插入",
    "section": "指定使用的数据源",
    "route": "/zh-CN/database/upsert-records",
    "fragment": "指定使用的数据源",
    "content": "在Kronos中，我们可以将KronosDataSourceWrapper传入execute方法，以实现自定义的数据库连接。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "使用",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用set设置更新的字段和值",
    "content": "set"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "设置更新的字段和值",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用set设置更新的字段和值",
    "content": "在Kronos中，我们可以使用KPojo.update().set方法设置需要更新的字段和值，然后使用execute方法执行更新操作。 当未使用by或where方法时，Kronos会根据KPojo对象的值生成更新条件语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "设置更新的字段和值",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用set设置更新的字段和值",
    "content": "null值不会被包含在更新条件中，即null值不会被用于生成更新条件语句，若需要更新null值，请使用where方法设置更新条件。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "使用",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用by设置更新条件",
    "content": "by"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "设置更新条件",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用by设置更新条件",
    "content": "在Kronos中，我们可以使用by方法设置更新条件，此时Kronos会根据by方法设置的字段生成更新条件语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "使用",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用where设置更新条件",
    "content": "where"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "设置更新条件",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用where设置更新条件",
    "content": "在Kronos中，我们可以使用where方法设置更新条件，此时Kronos会根据where方法设置的字段生成更新条件语句。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "使用",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用update设置需要更新的字段",
    "content": "update"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "设置需要更新的字段",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用update设置需要更新的字段",
    "content": "在Kronos中，我们在update方法中设置需要更新的字段，未在update方法中设置的字段将不会被更新。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "使用",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用updateexcept设置需要排除的字段",
    "content": "updateExcept"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "设置需要排除的字段",
    "route": "/zh-CN/database/update-records",
    "fragment": "使用updateexcept设置需要排除的字段",
    "content": "在Kronos中，我们可以使用updateExcept方法设置需要排除的字段，未在updateExcept方法中设置的字段将会被更新。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "影响行数",
    "route": "/zh-CN/database/update-records",
    "fragment": "影响行数",
    "content": "在Kronos中，我们可以使用execute方法执行更新操作，并获取更新操作的影响行数。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "批量更新记录",
    "route": "/zh-CN/database/update-records",
    "fragment": "批量更新记录",
    "content": "在Kronos中，我们可以使用Iterable"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "批量更新记录",
    "route": "/zh-CN/database/update-records",
    "fragment": "批量更新记录",
    "content": ".update().execute()或Array"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "批量更新记录",
    "route": "/zh-CN/database/update-records",
    "fragment": "批量更新记录",
    "content": ".update().execute()方法用于批量更新数据库中的记录。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "更新记录"
    ],
    "pageType": "guide",
    "title": "更新记录",
    "section": "指定使用的数据源",
    "route": "/zh-CN/database/update-records",
    "fragment": "指定使用的数据源",
    "content": "在Kronos中，我们可以将KronosDataSourceWrapper传入execute方法，以实现自定义的数据库连接。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "1.Criteria 条件对象",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "1criteria-条件对象",
    "content": "Kronos使用Criteria对象构建条件表达式，并且支持复杂的条件组合，如and、or、not等，用于where、having、on等条件中。 你可以使用where条件对象组成复杂的查询条件在select、delete、update、join中使用，形如 基于KCP，Kronos允许你使用真实的kotlin操作符来构建Criteria查询条件，如==、!=、>、<、>=、<=、in、|| 、&&等，而不是其他框架中eq、ne、gt、lt、ge、le等自定义操作符，而从表达式到Criteria对象的转换是在编译期完成的。 kronos表达式支持动态构建条件和根据对象的属性自动生成条件，并且支持传入sql字符串作为条件。 使用kronos就像在写原生的kotlin代码一样，这将大大提高开发效率和降低学习成本及心智负担。"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "2.支持的函数和操作符",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "2支持的函数和操作符",
    "content": "Kronos支持的函数和操作符如下："
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "2.1.操作符",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "21操作符",
    "content": "==：等于!=：不等于>：大于<：小于>=：大于等于<=：小于等于in：在范围内，也可以使用contains代替，如a in b可以写成b.contains(a)||：或&&：与!：非，可以与其他函数和操作符一起使用，如!(a == 1 || a == 2) && a !in listOf(3, 4)"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "between",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "between",
    "content": "在范围内，接收ClosedRange类型的参数"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "notBetween",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "notbetween",
    "content": "不在范围内，接收ClosedRange类型的参数"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "like",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "like",
    "content": "模糊查询，接收String类型的参数"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "matchLeft",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "matchleft",
    "content": "左模糊查询，接收String类型的参数，可以不传入参数，如it.name.matchLeft() 或 it.name.matchLeft"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "matchRight",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "matchright",
    "content": "右模糊查询，接收String类型的参数，可以不传入参数，如it.name.matchRight() 或 it.name.matchRight"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "matchBoth",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "matchboth",
    "content": "全模糊查询，接收String类型的参数，可以不传入参数，如it.name.matchBoth() 或 it.name.matchBoth"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "notLike",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "notlike",
    "content": "不匹配，接收String类型的参数"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "isNull",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "isnull",
    "content": "为空"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "notNull",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "notnull",
    "content": "不为空"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "regexp",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "regexp",
    "content": "正则表达式查询，接收String类型的参数"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "asSql",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "assql",
    "content": "自定义SQL查询条件，接收String类型的参数"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "eq",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "eq",
    "content": "等于，等同于==，可以不传入参数，如it.name.eq() 或 it.name.eq"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "notEq",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "noteq",
    "content": "不等于，等同于!=，但是可以不传入参数，如it.name.notEq() 或 it.name.notEq"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "gt",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "gt",
    "content": "大于，等同于>，可以不传入参数，如it.age.gt() 或 it.age.gt"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "lt",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "lt",
    "content": "小于，等同于<，可以不传入参数，如it.age.lt() 或 it.age.lt"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "ge",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "ge",
    "content": "大于等于，等同于>=，可以不传入参数，如it.age.ge() 或 it.age.ge"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "le",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "le",
    "content": "小于等于，等同于<=，可以不传入参数，如it.age.le() 或 it.age.le"
  },
  {
    "breadcrumbs": [
      "基础操作",
      "Criteria 条件"
    ],
    "pageType": "guide",
    "title": "Criteria 条件",
    "section": "ifNoValue",
    "route": "/zh-CN/database/where-having-on-clause",
    "fragment": "ifnovalue",
    "content": "无值策略，接收参数NoValueStrategy，用于处理无值的情况，优先级高于Kronos默认的无值策略，详见：无值策略"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "kronos-orm是一个多模块的项目，我们提供了多个模块供开发者选择，开发者可以根据自己的需求选择对应的模块。 其中："
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "kronos-core"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "是"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "必选模块"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "，它提供了基础的ORM功能"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "kronos-logging"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "是可选模块，它提供了多平台的日志功能"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "kronos-jvm-driver-wrapper"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "是可选模块，它提供了JVM驱动包装器。（您可以使用其他官方驱动包装器或自己编写包装类轻松地搭配第三方框架（如SpringData、Mybatis、Hibernate、Jdbi等）使用）"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "kronos-compiler-plugin"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "插件是"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "必选模块"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "添加依赖：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "添加依赖",
    "content": "，它为Kronos的ORM功能提供了编译时支持"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "快速上手"
    ],
    "pageType": "guide",
    "title": "快速上手",
    "section": "配置数据库：",
    "route": "/zh-CN/getting-started/quick-start",
    "fragment": "配置数据库",
    "content": "这里仅介绍kronos-jvm-driver-wrapper模块Mysql下的使用，其他模块的使用方式类似，具体请参考连接到数据库。 需引入commons-dbcp2、mysql-connector-java等依赖。 当使用其他数据库或使用非jvm平台时，需要使用对应的驱动及配置。"
  },
  {
    "breadcrumbs": [
      "快速开始",
      "欢迎 & 简介"
    ],
    "pageType": "guide",
    "title": "欢迎 & 简介",
    "section": "欢迎 & 简介",
    "route": "/zh-CN/getting-started/welcome",
    "fragment": "欢迎--简介",
    "content": "Kronos ORM(Kotlin Reactive Object-Relational-Mapping)是一款基于KCP、为K2设计的现代化的kotlin ORM框架。 Kronos是一个轻量级的框架，为开发者提供了一种简单操作多种数据库的方案。 Kronos分析 IR 表达式树以简化代码编写逻辑，得以使ORM的编写简洁而又语义化，并且通过编译器插件，我们同时提供了Pojo和Map互转的简单方案。 Kronos的设计初衷是为了弥补现有ORM框架中不足之处，并基于协程和任务机制对数据操作提供更加便捷和高效的编写体验。"
  },
  {
    "breadcrumbs": [
      "插件",
      "数据库支持扩展"
    ],
    "pageType": "guide",
    "title": "数据库支持扩展",
    "section": "数据库支持扩展",
    "route": "/zh-CN/plugin/database-support",
    "fragment": "数据库支持扩展",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "插件",
      "语言包"
    ],
    "pageType": "guide",
    "title": "语言包",
    "section": "语言包",
    "route": "/zh-CN/plugin/language",
    "fragment": "语言包",
    "content": "It's time to write some awesome docs!"
  },
  {
    "breadcrumbs": [
      "插件",
      "Driver包装器及三方框架扩展"
    ],
    "pageType": "guide",
    "title": "Driver包装器及三方框架扩展",
    "section": "Driver包装器及三方框架扩展",
    "route": "/zh-CN/plugin/datasource-wrapper-and-third-part-framework",
    "fragment": "driver包装器及三方框架扩展",
    "content": "It's time to write some awesome docs!"
  }
]