import{a as h}from"./chunk-FJ26F7HW.js";import{a as r}from"./chunk-4FO7WJ36.js";import{a as l}from"./chunk-LVHT47OW.js";import{F as j}from"./chunk-LWH7SIW3.js";import{Pb as t,jc as p,kc as g,ra as i,xb as o}from"./chunk-TLBD5JYT.js";import{a as d,b as c,g as f}from"./chunk-ODN5LVDJ.js";var u=f(j());var x={title:"Database Scheme Operation",mdFile:"./index.md",category:h,order:1},e=x;var m=[];var y={},b=y;var T=`<h1 id="database-scheme-operation" class="ngde">Database Scheme Operation<a title="Link to heading" class="ng-doc-header-link ngde" href="/en/database/database-operation#database-scheme-operation"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h1><p class="ngde">\u76F8\u6BD4\u4E8Ekotoframework, Kronos\u662F\u4E00\u4E2ACode-First\u7684ORM\u6846\u67B6\uFF0C\u5B83\u589E\u52A0\u4E86\u5BF9\u4E8E\u6570\u636E\u5E93\u8868\u7ED3\u6784\u7684\u64CD\u4F5C\u3002</p><p class="ngde">\u76F8\u5173\u529F\u80FD\u53EF\u53EF\u4EE5\u901A\u8FC7<strong class="ngde">Kronos.dataSource</strong>(<code class="ngde">() -> KronosDataSourceWrapper</code>)\u6216\u67D0\u4E2A\u5177\u4F53\u7684\u6570\u636E\u6E90\u5BF9\u8C61(<code class="ngde">KronosDataSourceWrapper</code>)\u6765\u8C03\u7528\u3002</p><h2 id="1-\u8868\u662F\u5426\u5B58\u5728" class="ngde">1. \u8868\u662F\u5426\u5B58\u5728<a title="Link to heading" class="ng-doc-header-link ngde" href="/en/database/database-operation#1-\u8868\u662F\u5426\u5B58\u5728"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><p class="ngde">\u901A\u8FC7<code class="ngde">exists</code>\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5224\u65AD\u8868\u662F\u5426\u5B58\u5728\uFF0C\u8FD4\u56DE<code class="ngde">true</code>\u8868\u793A\u5B58\u5728\uFF0C<code class="ngde">false</code>\u8868\u793A\u4E0D\u5B58\u5728\u3002</p><pre class="ngde hljs"><code class="hljs language-kotlin code-lines ngde" lang="kotlin" name="demo" icon="kotlin" highlightedlines="[]"><span class="line ngde"><span class="hljs-keyword ngde">val</span> exists: <span class="hljs-built_in ngde">Boolean</span> = db.table.exists(user)
</span><span class="line ngde"><span class="hljs-comment ngde">// \u6216</span>
</span><span class="line ngde"><span class="hljs-keyword ngde">val</span> exists: <span class="hljs-built_in ngde">Boolean</span> = db.table.exists&#x3C;User>()
</span><span class="line ngde"><span class="hljs-comment ngde">// \u6216</span>
</span><span class="line ngde"><span class="hljs-keyword ngde">val</span> exists: <span class="hljs-built_in ngde">Boolean</span> = db.table.exists(<span class="hljs-string ngde">"user"</span>)
</span></code></pre><h2 id="2-\u521B\u5EFA\u8868" class="ngde">2. \u521B\u5EFA\u8868<a title="Link to heading" class="ng-doc-header-link ngde" href="/en/database/database-operation#2-\u521B\u5EFA\u8868"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><p class="ngde">\u901A\u8FC7<code class="ngde">createTable</code>\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u521B\u5EFA\u8868\u3002</p><pre class="ngde hljs"><code class="hljs language-kotlin code-lines ngde" lang="kotlin" name="demo" icon="kotlin" highlightedlines="[]"><span class="line ngde">db.table.createTable(user)
</span><span class="line ngde"><span class="hljs-comment ngde">// \u6216</span>
</span><span class="line ngde">db.table.createTable&#x3C;User>()
</span></code></pre><h2 id="3-\u5220\u9664\u8868" class="ngde">3. \u5220\u9664\u8868<a title="Link to heading" class="ng-doc-header-link ngde" href="/en/database/database-operation#3-\u5220\u9664\u8868"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><p class="ngde">\u901A\u8FC7<code class="ngde">dropTable</code>\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5220\u9664\u8868\u3002</p><pre class="ngde hljs"><code class="hljs language-kotlin code-lines ngde" lang="kotlin" name="demo" icon="kotlin" highlightedlines="[]"><span class="line ngde">db.table.dropTable(user)
</span><span class="line ngde"><span class="hljs-comment ngde">// \u6216</span>
</span><span class="line ngde">db.table.dropTable&#x3C;User>()
</span><span class="line ngde"><span class="hljs-comment ngde">// \u6216</span>
</span><span class="line ngde">db.table.dropTable(<span class="hljs-string ngde">"user"</span>)
</span></code></pre><h2 id="4-\u8868\u7ED3\u6784\u540C\u6B65\u548C\u53D8\u66F4" class="ngde">4. \u8868\u7ED3\u6784\u540C\u6B65\u548C\u53D8\u66F4<a title="Link to heading" class="ng-doc-header-link ngde" href="/en/database/database-operation#4-\u8868\u7ED3\u6784\u540C\u6B65\u548C\u53D8\u66F4"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><p class="ngde">\u901A\u8FC7<code class="ngde">syncSchema</code>\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u6839\u636E\u5B9E\u4F53\u7C7B\u7684\u5B9A\u4E49\uFF0C\u81EA\u52A8\u540C\u6B65\u8868\u7ED3\u6784\u3002</p><pre class="ngde hljs"><code class="hljs language-kotlin code-lines ngde" lang="kotlin" name="demo" icon="kotlin" highlightedlines="[]"><span class="line ngde">db.table.syncSchema(user)
</span><span class="line ngde"><span class="hljs-comment ngde">// \u6216</span>
</span><span class="line ngde">db.table.syncSchema&#x3C;User>()
</span></code></pre><h2 id="5-\u52A8\u6001\u5EFA\u8868" class="ngde">5. \u52A8\u6001\u5EFA\u8868<a title="Link to heading" class="ng-doc-header-link ngde" href="/en/database/database-operation#5-\u52A8\u6001\u5EFA\u8868"><ng-doc-icon icon="link-2" size="16" class="ngde"></ng-doc-icon></a></h2><p class="ngde">\u90E8\u5206\u60C5\u51B5\u4E0B\u4F1A\u5B58\u5728\u52A8\u6001\u5EFA\u8868\u7684\u9700\u6C42\uFF0C\u6B64\u65F6\u53EF\u4EE5\u901A\u8FC7<code class="ngde">getTableCreateSqlList</code>\u65B9\u6CD5\u52A8\u6001\u83B7\u53D6\u5EFA\u8868\u8BED\u53E5\u5E76\u6267\u884C\u3002</p><p class="ngde"><code class="ngde">getTableCreateSqlList</code>\u63A5\u6536\u7684\u53C2\u6570\u5305\u62EC\uFF1A</p><ul class="ngde"><li class="ngde"><code class="ngde">dbType</code>\uFF1A<code class="ngde">DBType</code> \u6570\u636E\u5E93\u7C7B\u578B</li><li class="ngde"><code class="ngde">tableName</code>\uFF1A<code class="ngde">String</code> \u8868\u540D</li><li class="ngde"><code class="ngde">fields</code>\uFF1A<code class="ngde">List&#x3C;Field></code> \u5B57\u6BB5\u5217\u8868</li><li class="ngde"><code class="ngde">indexes</code>\uFF1A<code class="ngde">List&#x3C;KTableIndex></code> \u7D22\u5F15\u5217\u8868</li></ul><pre class="ngde hljs"><code class="hljs language-kotlin code-lines ngde" lang="kotlin" name="demo" icon="kotlin" highlightedlines="[2,31]"><span class="line ngde"><span class="hljs-keyword ngde">val</span> listOfSql = 
</span><span class="line highlighted ngde">  getTableCreateSqlList(
</span><span class="line ngde">      dbType = DBType.Mysql,
</span><span class="line ngde">      tableName = <span class="hljs-string ngde">"user"</span>,
</span><span class="line ngde">      fields = listOf(
</span><span class="line ngde">          Field(
</span><span class="line ngde">              name = <span class="hljs-string ngde">"id"</span>,
</span><span class="line ngde">              type = KColumnType.fromString(<span class="hljs-string ngde">"INT"</span>),
</span><span class="line ngde">              primaryKey = <span class="hljs-literal ngde">true</span>,
</span><span class="line ngde">              identity = <span class="hljs-literal ngde">true</span>
</span><span class="line ngde">          ),
</span><span class="line ngde">          Field(
</span><span class="line ngde">              name = <span class="hljs-string ngde">"name"</span>,
</span><span class="line ngde">              type = KColumnType.fromString(<span class="hljs-string ngde">"VARCHAR"</span>),
</span><span class="line ngde">              length = <span class="hljs-number ngde">255</span>
</span><span class="line ngde">          ),
</span><span class="line ngde">          Field(
</span><span class="line ngde">              name = <span class="hljs-string ngde">"age"</span>,
</span><span class="line ngde">              type = KColumnType.fromString(<span class="hljs-string ngde">"INT"</span>),
</span><span class="line ngde">          )
</span><span class="line ngde">      ),
</span><span class="line ngde">      indexes = listOf(
</span><span class="line ngde">          KTableIndex(
</span><span class="line ngde">              name = <span class="hljs-string ngde">"idx_name"</span>,
</span><span class="line ngde">              columns = listOf(<span class="hljs-string ngde">"name"</span>),
</span><span class="line ngde">              type = <span class="hljs-string ngde">"UNIQUE"</span>
</span><span class="line ngde">          )
</span><span class="line ngde">      )
</span><span class="line ngde">  )
</span><span class="line ngde">  
</span><span class="line highlighted ngde">listOfSql.forEach { db.execute(it) }
</span></code></pre><ng-doc-blockquote type="warning" class="ngde"><p class="ngde">\u82E5\u9700\u8981\u5BF9\u540C\u4E00\u4E2A\u5B9E\u4F53\u5BF9\u8C61\u8FDE\u7EED\u6267\u884C\u591A\u4E2A\u6570\u636E\u5E93\u64CD\u4F5C\uFF0C\u5EFA\u8BAE\u4E0D\u8981\u4F7F\u7528\u6CDB\u578B\uFF0C\u4EE5\u907F\u514D\u591A\u6B21\u521B\u5EFAKPojo\u5BF9\u8C61\uFF0C\u4EA7\u751F\u4E0D\u5FC5\u8981\u7684\u5F00\u9500\u3002</p></ng-doc-blockquote>`,S=(()=>{let s=class s extends l{constructor(){super(),this.routePrefix="",this.pageType="guide",this.pageContent=T,this.page=e,this.demoAssets=b}};s.\u0275fac=function(a){return new(a||s)},s.\u0275cmp=i({type:s,selectors:[["ng-doc-page-en-database-database-operation"]],standalone:!0,features:[p([{provide:l,useExisting:s},m,e.providers??[]]),o,g],decls:1,vars:0,template:function(a,D){a&1&&t(0,"ng-doc-page")},dependencies:[r],encapsulation:2,changeDetection:0});let n=s;return n})(),C=[c(d({},(0,u.isRoute)(e.route)?e.route:{}),{path:"",component:S,title:"Database Scheme Operation"})],q=C;export{S as DynamicComponent,q as default};
