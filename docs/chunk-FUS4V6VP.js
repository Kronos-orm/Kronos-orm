import{a as h}from"./chunk-BGQV27OW.js";import{a as k}from"./chunk-ZURMYKNO.js";import"./chunk-4JROJSXB.js";import{a as l}from"./chunk-6UJLH36S.js";import"./chunk-IXRPNEAA.js";import{J as b}from"./chunk-C2WBB6IV.js";import"./chunk-VUUK7CK3.js";import"./chunk-H7KULVEM.js";import"./chunk-72PMQN5Q.js";import{Ub as r,pa as c,rc as t,sc as p,xb as d}from"./chunk-2GGA2KC7.js";import{a as o,b as i,h as D}from"./chunk-TWZW5B45.js";var F=D(b());var m={title:"Database Scheme Operation",mdFile:"./index.md",category:h,order:1},a=m;var g=[];var u={},B=u;var C=`<p class="ngde">Compared to kotoframework, Kronos is a Code-First ORM framework that adds operations on database table structures.</p><p class="ngde">Related functions can be called through <strong class="ngde">Kronos.dataSource</strong>(<code class="ngde">() -> KronosDataSourceWrapper</code>) or a specific data source object (<code class="ngde">KronosDataSourceWrapper</code>).</p><h2 id="1-check-if-the-table-exists" href="documentation/en/database/database-operation" headinglink="true" class="ngde">1. Check if the table exists<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="1-check-if-the-table-exists"></ng-doc-heading-anchor></h2><p class="ngde">Use the <code class="ngde">exists</code> method to check if the table exists, which returns a Boolean value.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0" name="demo" icon="kotlin"><code class="language-kotlin"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">val</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> exists: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Boolean</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> db.table.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">exists</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(user)</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// or</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">val</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> exists: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Boolean</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> db.table.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">exists</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">User</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">>()</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// or</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">val</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> exists: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Boolean</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde"> =</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> db.table.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">exists</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"user"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span></span></code></pre><h2 id="2-create-a-table" href="documentation/en/database/database-operation" headinglink="true" class="ngde">2. Create a table<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="2-create-a-table"></ng-doc-heading-anchor></h2><p class="ngde">Use the <code class="ngde">createTable</code> method to create a table.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0" name="demo" icon="kotlin"><code class="language-kotlin"><span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">db.table.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">createTable</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(user)</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// or</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">db.table.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">createTable</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">User</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">>()</span></span></code></pre><h2 id="3-delete-a-table" href="documentation/en/database/database-operation" headinglink="true" class="ngde">3. Delete a table<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="3-delete-a-table"></ng-doc-heading-anchor></h2><p class="ngde">Use the <code class="ngde">dropTable</code> method to delete a table.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0" name="demo" icon="kotlin"><code class="language-kotlin"><span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">db.table.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">dropTable</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(user)</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// or</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">db.table.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">dropTable</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">User</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">>()</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// or</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">db.table.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">dropTable</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"user"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span></span></code></pre><h2 id="4-synchronize-table-structure" href="documentation/en/database/database-operation" headinglink="true" class="ngde">4. Synchronize table structure<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="4-synchronize-table-structure"></ng-doc-heading-anchor></h2><p class="ngde">Use the <code class="ngde">syncSchema</code> method to synchronize the table structure.</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0" name="demo" icon="kotlin"><code class="language-kotlin"><span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">db.table.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">syncSchema</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(user)</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// or</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">db.table.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">syncSchema</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">User</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">>()</span></span></code></pre><h2 id="5-dynamic-table-creation" href="documentation/en/database/database-operation" headinglink="true" class="ngde">5. Dynamic table creation<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="5-dynamic-table-creation"></ng-doc-heading-anchor></h2><p class="ngde">The <code class="ngde">getTableCreateSqlList</code> method is used to dynamically generate SQL statements for creating tables. The parameters received by <code class="ngde">getTableCreateSqlList</code> include:</p><ul class="ngde"><li class="ngde"><code class="ngde">dbType</code>\uFF1A<code class="ngde">DBType</code> Database type</li><li class="ngde"><code class="ngde">tableName</code>\uFF1A<code class="ngde">String</code> Table name</li><li class="ngde"><code class="ngde">fields</code>\uFF1A<code class="ngde">List&#x3C;Field></code> Field list</li><li class="ngde"><code class="ngde">indexes</code>\uFF1A<code class="ngde">List&#x3C;KTableIndex></code> Index list</li></ul><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0" name="demo" icon="kotlin" highlightedlines="[2,31]"><code class="language-kotlin"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">val</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> listOfSql </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> </span></span>
<span class="line highlighted"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">  getTableCreateSqlList</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      dbType </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> DBType.Mysql,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      tableName </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> "user"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      fields </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> listOf</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">          Field</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              name </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> "id"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              type </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> KColumnType.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">fromString</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"INT"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">),</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              primaryKey </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> true</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              identity </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> true</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">          ),</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">          Field</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              name </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> "name"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              type </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> KColumnType.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">fromString</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"VARCHAR"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">),</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              length </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> 255</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">          ),</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">          Field</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              name </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> "age"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              type </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> KColumnType.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">fromString</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"INT"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">),</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">          )</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      ),</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      indexes </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> listOf</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">          KTableIndex</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              name </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> "idx_name"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              columns </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> listOf</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">"name"</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">),</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">              type </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde"> "UNIQUE"</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">          )</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">      )</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  )</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">  </span></span>
<span class="line highlighted"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">listOfSql.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">forEach</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> { db.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">execute</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(it) }</span></span></code></pre><ng-doc-blockquote type="warning" class="ngde"><p class="ngde">If you need to perform multiple database operations on the same entity object in succession, it is recommended not to use generics to avoid creating KPojo objects multiple times and incurring unnecessary overhead.</p></ng-doc-blockquote>`,E=(()=>{let s=class s extends l{constructor(){super(),this.pageType="guide",this.pageContent=C,this.editSourceFileUrl="https://github.com/Kronos-orm/Kronos-orm/edit/docs/src/app/docs/en/database/database-operation/index.md?message=docs(): describe your changes here...",this.viewSourceFileUrl="https://github.com/Kronos-orm/Kronos-orm/blob/docs/src/app/docs/en/database/database-operation/index.md",this.page=a,this.demoAssets=B}};s.\u0275fac=function(n){return new(n||s)},s.\u0275cmp=c({type:s,selectors:[["ng-doc-page-p8bnan4v"]],standalone:!0,features:[t([{provide:l,useExisting:s},g,a.providers??[]]),d,p],decls:1,vars:0,template:function(n,A){n&1&&r(0,"ng-doc-page")},dependencies:[k],encapsulation:2,changeDetection:0});let e=s;return e})(),f=[i(o({},(0,F.isRoute)(a.route)?a.route:{}),{path:"",component:E,title:"Database Scheme Operation"})],I=f;export{E as PageComponent,I as default};
