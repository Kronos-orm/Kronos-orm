import{a as h}from"./chunk-BQGOXYAE.js";import{a as k}from"./chunk-ZURMYKNO.js";import"./chunk-4JROJSXB.js";import{a as l}from"./chunk-6UJLH36S.js";import"./chunk-IXRPNEAA.js";import{J as D}from"./chunk-C2WBB6IV.js";import"./chunk-VUUK7CK3.js";import"./chunk-H7KULVEM.js";import"./chunk-72PMQN5Q.js";import{Ub as c,pa as o,rc as d,sc as t,xb as p}from"./chunk-2GGA2KC7.js";import{a as r,b as i,h as E}from"./chunk-TWZW5B45.js";var F=E(D());var A={title:"Driver for connection and Third-Party Framework",mdFile:"./index.md",category:h,order:0},a=A;var g=[];var m={},B=m;var u=`<p class="ngde">Kronos can be easily used with third-party frameworks by customizing the wrapper class that inherits the <code class="ngde">KronosDataSourceWrapper</code> interface.</p><h2 id="spring-example" href="documentation/en/plugin/datasource-wrapper-and-third-part-framework" headinglink="true" class="ngde">Spring Example<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="spring-example"></ng-doc-heading-anchor></h2><p class="ngde">The following is an example using Springboot + Kronos + JDK 17 + Maven + Kotlin 2.0.0 to demonstrate how to use Kronos with the Spring framework.</p><p class="ngde">It includes how to create a wrapper class based on <code class="ngde">spring-data-jdbc</code>, so that there is no need to introduce additional dependencies such as <code class="ngde">kronos-jdbc-wrapper</code>, and the database operation function can be realized only through <code class="ngde">kronos-core</code>.</p><ng-doc-blockquote class="ngde"><p class="ngde"><a href="https://github.com/Kronos-orm/kronos-spring-demo" class="ngde">https://github.com/Kronos-orm/kronos-spring-demo</a></p></ng-doc-blockquote><h3 id="1-dependencies" href="documentation/en/plugin/datasource-wrapper-and-third-part-framework" headinglink="true" class="ngde">1. Dependencies<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="1-dependencies"></ng-doc-heading-anchor></h3><p class="ngde">Introduce <code class="ngde">spring</code> related dependencies and <code class="ngde">kronos-core</code> dependencies ( see <a href="/documentation/en/getting-started/quick-start" class="ngde">Quick Start</a> for the introduction of <code class="ngde">compiler-plugin</code> plug-in))</p><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-xml"><span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">dependencies</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">    &#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">dependency</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">        &#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">groupId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">org.springframework.data</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">groupId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">        &#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">artifactId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">spring-data-jdbc</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">artifactId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">    &#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">dependency</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">    &#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">dependency</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">        &#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">groupId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">org.apache.commons</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">groupId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">        &#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">artifactId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">commons-dbcp2</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">artifactId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">    &#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">dependency</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">    &#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">dependency</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">        &#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">groupId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">com.kotlinorm</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">groupId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">        &#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">artifactId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">kronos-core</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">artifactId</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">        &#x3C;</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">version</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">\${kronos.version}</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">version</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">    &#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">dependency</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">&#x3C;/</span><span style="color:#22863A;--shiki-dark:#39BAE6" class="ngde">dependencies</span><span style="color:#24292E;--shiki-dark:#39BAE680" class="ngde">></span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> </span></span></code></pre><h3 id="2kronosdatasourcewrapper-implementation" href="documentation/en/plugin/datasource-wrapper-and-third-part-framework" headinglink="true" class="ngde">2.KronosDataSourceWrapper implementation<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="2kronosdatasourcewrapper-implementation"></ng-doc-heading-anchor></h3><h4 id="1-initialize-connection-information-and-jdbc-template" href="documentation/en/plugin/datasource-wrapper-and-third-part-framework" headinglink="true" class="ngde">1. Initialize connection information and JDBC template<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="1-initialize-connection-information-and-jdbc-template"></ng-doc-heading-anchor></h4><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-kotlin"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// Initialize connection information</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">init</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    val</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> conn </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> dataSource.connection</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    _metaUrl </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> conn.metaData.url</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    _metaDbType </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> DBType.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">fromName</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(conn.metaData.databaseProductName)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    _userName </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> conn.metaData.userName ?: </span><span style="color:#032F62;--shiki-dark:#AAD94C" class="ngde">""</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    conn.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">close</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">// NamedParameterJdbcTemplate is the Spring Data JDBC support for JDBC commands, which supports named parameters</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">private</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> val</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> namedJdbc: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">NamedParameterJdbcTemplate</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> by</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> lazy</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">    NamedParameterJdbcTemplate</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(dataSource)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span>
<span class="line"></span></code></pre><h4 id="2overload-the-springdatawrapper" href="documentation/en/plugin/datasource-wrapper-and-third-part-framework" headinglink="true" class="ngde">2.overload the SpringDataWrapper<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="2overload-the-springdatawrapper"></ng-doc-heading-anchor></h4><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-kotlin"><span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">//1.query Map&#x3C;String, Any> list</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">override</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> fun</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> forList</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">KAtomicQueryTask</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">): </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">List</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Map</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">String</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">, </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Any</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">>> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    return</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> namedJdbc.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">queryForList</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task.sql, task.paramMap)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">//2.query object list</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">override</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> fun</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> forList</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">KAtomicQueryTask</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">, kClass: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">KClass</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;*>): </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">List</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Any</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    return</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> if</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (KPojo::</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">class</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">isSuperclassOf</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(kClass)) namedJdbc.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">query</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        task.sql,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        task.paramMap,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">        DataClassRowMapper</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(kClass.java)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    )</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    else</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> namedJdbc.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">queryForList</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task.sql, task.paramMap, kClass.java)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">//3.query map, if query result is empty, return null</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">override</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> fun</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> forMap</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">KAtomicQueryTask</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">): </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Map</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">String</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">, </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Any</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">>? {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    return</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> try</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        namedJdbc.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">queryForMap</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task.sql, task.paramMap)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">catch</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (e: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">DataAccessException</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde">        null</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">//4.query object, if query result is empty, return null</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">override</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> fun</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> forObject</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">KAtomicQueryTask</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">, kClass: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">KClass</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">&#x3C;*>): </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Any</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">? {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    return</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> try</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">        if</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (KPojo::</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">class</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">isSuperclassOf</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(kClass)) namedJdbc.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">queryForObject</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">            task.sql,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">            task.paramMap,</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">            DataClassRowMapper</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(kClass.java)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        )</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">        else</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> namedJdbc.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">queryForObject</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task.sql, task.paramMap, kClass.java)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">catch</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (e: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">DataAccessException</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde">        null</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">//5.execute update, return the number of rows affected</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">override</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> fun</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> update</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">KAtomicActionTask</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">): </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Int</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    return</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> namedJdbc.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">update</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task.sql, task.paramMap)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">//6.execute batch update, return the number of rows affected</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">override</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> fun</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> batchUpdate</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">KronosAtomicBatchTask</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">): </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">IntArray</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    return</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> namedJdbc.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">batchUpdate</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(task.sql, task.paramMapArr ?: </span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">emptyArray</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">())</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">//7.transaction</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">override</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> fun</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> transact</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(block: (</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">DataSource</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) -> </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Any</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">?): </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Any</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">? {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    val</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> transactionManager </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> DataSourceTransactionManager</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(dataSource)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    val</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> transactionTemplate </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> TransactionTemplate</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(transactionManager)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    var</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> res: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Any</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">? </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#005CC5;--shiki-dark:#D2A6FF" class="ngde"> null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    transactionTemplate.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">execute</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">        try</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">            res </span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">=</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> block</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(dataSource)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        } </span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">catch</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> (e: </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">Exception</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">            throw</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> e</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">        }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    return</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> res</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><h4 id="3some-other-things" href="documentation/en/plugin/datasource-wrapper-and-third-part-framework" headinglink="true" class="ngde">3.Some other things<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="3some-other-things"></ng-doc-heading-anchor></h4><pre class="shiki shiki-themes github-light ayu-dark" style="background-color:#fff;--shiki-dark-bg:#0b0e14;color:#24292e;--shiki-dark:#bfbdb6" tabindex="0"><code class="language-kotlin"><span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">companion</span><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde"> object</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    //extension function to wrap JdbcTemplate in SpringDataWrapper</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    fun</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> JdbcTemplate</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">wrapper</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(): </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">SpringDataWrapper</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">        return</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> SpringDataWrapper</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">this</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">.dataSource</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">!!</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#ACB6BF8C;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">    //extension function to wrap NamedParameterJdbcTemplate in SpringDataWrapper</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">    fun</span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde"> NamedParameterJdbcTemplate</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">.</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde">wrapper</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(): </span><span style="color:#6F42C1;--shiki-dark:#59C2FF" class="ngde">SpringDataWrapper</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#FF8F40" class="ngde">        return</span><span style="color:#6F42C1;--shiki-dark:#FFB454" class="ngde"> SpringDataWrapper</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">(</span><span style="color:#005CC5;--shiki-dark:#39BAE6;font-style:inherit;--shiki-dark-font-style:italic" class="ngde">this</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">.jdbcTemplate.dataSource</span><span style="color:#D73A49;--shiki-dark:#F29668" class="ngde">!!</span><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#BFBDB6" class="ngde">}</span></span></code></pre><p class="ngde">All code can be found in: <a href="https://github.com/Kronos-orm/kronos-spring-demo/blob/main/src/main/kotlin/com/kotlinorm/kronosSpringDemo/controller/SpringDataWrapper.kt" class="ngde">SpringDataWrapper.kt</a></p><h2 id="other-frameworks" href="documentation/en/plugin/datasource-wrapper-and-third-part-framework" headinglink="true" class="ngde">Other Frameworks<ng-doc-heading-anchor class="ng-doc-anchor ngde" anchor="other-frameworks"></ng-doc-heading-anchor></h2><p class="ngde">For frameworks that support named parameters, the syntax is almost the same as SpringDataWrapper.</p><p class="ngde">For other frameworks that only support sequential parameters, you can get the parsed SQL statement through <code class="ngde">KAtomicQueryTask.parsed()</code> or <code class="ngde">KAtomicActionyTask.parsed()</code> or <code class="ngde">KronosAtomicBatchTask.parsedArr()</code>, which contains the parameter name and parameter value array.</p><p class="ngde">The subsequent process is the same as SpringDataWrapper, please refer to <a href="https://github.com/Kronos-orm/Kronos-orm/blob/main/kronos-jdbc-wrapper/src/main/kotlin/com/kotlinorm/KronosBasicWrapper.kt" class="ngde">KronosBasicWrapper.kt</a>.</p>`,C=(()=>{let s=class s extends l{constructor(){super(),this.pageType="guide",this.pageContent=u,this.editSourceFileUrl="https://github.com/Kronos-orm/Kronos-orm/edit/docs/src/app/docs/en/plugin/datasource-wrapper-and-third-part-framework/index.md?message=docs(): describe your changes here...",this.viewSourceFileUrl="https://github.com/Kronos-orm/Kronos-orm/blob/docs/src/app/docs/en/plugin/datasource-wrapper-and-third-part-framework/index.md",this.page=a,this.demoAssets=B}};s.\u0275fac=function(e){return new(e||s)},s.\u0275cmp=o({type:s,selectors:[["ng-doc-page-uh5dkf58"]],standalone:!0,features:[d([{provide:l,useExisting:s},g,a.providers??[]]),p,t],decls:1,vars:0,template:function(e,b){e&1&&c(0,"ng-doc-page")},dependencies:[k],encapsulation:2,changeDetection:0});let n=s;return n})(),f=[i(r({},(0,F.isRoute)(a.route)?a.route:{}),{path:"",component:C,title:"Driver for connection and Third-Party Framework"})],J=f;export{C as PageComponent,J as default};
