/**
* Copyright 2022-2024 kronos-orm
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

package com.kotlinorm.orm.join

import com.kotlinorm.cache.kPojoAllColumnsCache
import com.kotlinorm.cache.kPojoLogicDeleteCache
import com.kotlinorm.interfaces.KPojo
import com.kotlinorm.orm.pagination.PagedClause
import com.kotlinorm.utils.toLinkedSet
import kotlin.reflect.KClass

// Generated by generate-join-clause.gradle.kts
class SelectFrom11<T1: KPojo, T2: KPojo, T3: KPojo, T4: KPojo, T5: KPojo, T6: KPojo, T7: KPojo, T8: KPojo, T9: KPojo, T10: KPojo, T11: KPojo>(
    override var t1: T1,
    var t2: T2, var t3: T3, var t4: T4, var t5: T5, var t6: T6, var t7: T7, var t8: T8, var t9: T9, var t10: T10, var t11: T11
) : SelectFrom<T1>(t1) {
    override var tableName = t1.kronosTableName()
    override var paramMap = (t1.toDataMap() + t2.toDataMap() + t3.toDataMap() + t4.toDataMap() + t5.toDataMap() + t6.toDataMap() + t7.toDataMap() + t8.toDataMap() + t9.toDataMap() + t10.toDataMap() + t11.toDataMap()).toMutableMap()
    private var kClass1 = t1.kClass()
    private var kClass2 = t2.kClass()
    private var kClass3 = t3.kClass()
    private var kClass4 = t4.kClass()
    private var kClass5 = t5.kClass()
    private var kClass6 = t6.kClass()
    private var kClass7 = t7.kClass()
    private var kClass8 = t8.kClass()
    private var kClass9 = t9.kClass()
    private var kClass10 = t10.kClass()
    private var kClass11 = t11.kClass()
    override var logicDeleteStrategy = kPojoLogicDeleteCache[kClass1]
    override var allFields = kPojoAllColumnsCache[kClass1]
    override var listOfPojo: MutableList<Pair<KClass<KPojo>, KPojo>> = mutableListOf(kClass1 to t1, kClass2 to t2, kClass3 to t3, kClass4 to t4, kClass5 to t5, kClass6 to t6, kClass7 to t7, kClass8 to t8, kClass9 to t9, kClass10 to t10, kClass11 to t11)
    
    fun withTotal(): PagedClause<T1, SelectFrom11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> {
        return PagedClause(this)
    }
}