package com.kotlinorm.utils

import com.kotlinorm.interfaces.KPojo
import kotlin.reflect.KClass

/**
 * kClassCreator
 *
 * Transform the KClass into a KPojo instance
 *
 * **the body of this function will be generated by the compiler plugin**
 * @return KPojo instance
 */
var kClassCreator: (KClass<out KPojo>) -> KPojo? = { null }

/**
 * kClassCreatorCustom
 *
 * Transform the KClass into a KPojo instance, custom instantiation method
 *
 * @return KPojo instance
 */
var kClassCreatorCustom: (KClass<out KPojo>) -> KPojo? = { null }

fun registerKPojo(vararg kClass: KClass<out KPojo>) {}

@Suppress("UNCHECKED_CAST")
fun <T : KPojo> KClass<T>.createInstance(): T {
    return kClassCreator(this) as T? ?: kClassCreatorCustom(this) as T? ?: throw NullPointerException(
        "KClass ${this.simpleName} instantiation failed \n" +
                "1.Please check if the data class has a no-argument constructor. \n" +
                "2.if you did not add `Kronos.init{}` to your code, please add it  to the code, " +
                "this is a necessary step to use the ORM framework \n" +
                "3.if you have added it, Maybe you're referencing some third-party library and using a KPojo class defined by themï¼Œ" +
                "please add a custom instantiation method to the `kClassCreatorCustom` like this: \n" +
                "kClassCreatorCustom = { kClass -> \n" +
                "\twhen (kClass) {\n" +
                "\t\tYourKPojo::class -> YourKPojo()\n" +
                "\t\telse -> null\n\t}\n}"
    )
}